{"version":3,"sources":["components/table/TableRow.module.css","components/toggle-button/ToggleButton.module.css","components/menu/NavLinks.module.css","components/layout/NavBar.module.css","components/layout/Layout.module.css","components/layout/Card.module.css","components/daily-weather/DailyWeather.module.css","pages/HomePage.module.css","components/menu/MenuButton.module.css","components/table/Table.module.css","pages/HourlyForecastPage.module.css","store/WheaterContext.js","components/menu/MenuButton.js","functionality/LocaleStrings.js","components/toggle-button/ToggleButton.js","components/menu/NavLinks.js","components/layout/NavBar.js","components/body/BodyStyling.js","components/layout/Layout.js","components/layout/Card.js","functionality/IconNameSelection.js","components/table/TableRow.js","components/table/Table.js","functionality/DateStrings.js","functionality/DataPrepare.js","pages/HourlyForecastPage.js","components/daily-weather/DailyWeather.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","WeatherContext","createContext","unitSystem","language","theme","changeTheme","changeLanguaje","changeUnitSystem","WeatherContextProvider","props","useState","userUnitSystem","setUserUnitSystem","userLanguaje","setUserLanguaje","userTheme","setUserTheme","context","Provider","value","children","MenuButton","useContext","className","styles","menuButtonContainer","isOpen","size","color","icon","faTimes","onClick","handleClick","faBars","homePageTitle","en","es","navBarStrings","toggleLanguage","toggleTemperature","toggleTheme","hourlyStrings","ToggleButton","toggleSide","setToggleSide","bouncingCircleClasses","classNames","toggleButtonBouncingCircle","right","left","toggleButtonBouncingCircleLightTheme","themeSelector","buttonStructureClasses","toggleButtonStructure","toggleButtonStructureLightTheme","buttonTitleClasses","toggleButtonTitle","toggleButtonTitleLightTheme","toggleButtonContainer","text","defaultOption","e","callbackFunction","alternativeOption","NavLinks","weatherContext","classes","navBarButtonsContainerActive","navBarButtonsContainer","navBarButtonsContainerActiveLightTheme","navBarButton","languaje","NavBar","isMenuOpen","setIsMenuOpen","headerClasses","header","headerLightTheme","logoClasses","logo","logoLightTheme","to","style","textDecoration","BodyStyling","Layout","mainClasses","main","mainLightTheme","Card","cardStyles","card","cardLightTheme","iconRelations","faSun","faMoon","faCloudSun","faCloud","faCloudRain","faCloudSunRain","faCloudMoonRain","faPooStorm","faSnowflake","faSmog","faRainbow","iconNameSelection","iconName","icons","TableRow","strings","row","rowLightTheme","hourSection","time","dataSection","columnSmall","dataCell","column","p","temperature","feelsLike","description","fontSize","humidity","clouds","Table","table","data","map","item","idx","timeString","date","toLocaleTimeString","hour","minute","hourCycle","monthDay","lang","toLocaleDateString","month","day","weekDay","dateString","Date","weekday","formattedDateTime","dateTimeText","monthDayString","firstCharToUpper","dataString","charAt","toUpperCase","slice","unitSystems","metric","imperial","formattedTemperature","temp","unitSystemsArray","formattedCity","name","country","hourlyTitle","lan","monthDayName","weekDayName","HourlyForecastPage","sunData","setSunData","receivedData","setReceivedData","params","useParams","actualDate","useEffect","fetch","then","response","json","comparingDateString","len","hourly","length","filteredData","index","realDateTime","dt","toDateString","singleItem","weather","feels_like","push","sunrise","current","sunset","cleanHourlyData","sun","hourlyData","subTitleRow","DailyWeather","dailyWeatherCardClasses","dailyWeatherCard","dailyWeatherCardLightTheme","dateTime","HomePage","city","setCity","list","setList","apiCallCondition","setApiCallCondition","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","dataLength","filteredList","singleData","clean5DaysForecastData","cityData","listData","title","subTitle","dateTimeOriginal","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.37c9ddc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TableRow_row__3sq-P\",\"rowLightTheme\":\"TableRow_rowLightTheme__1pHx3\",\"hourSection\":\"TableRow_hourSection__HA1GU\",\"dataSection\":\"TableRow_dataSection__1aPFq\",\"column\":\"TableRow_column__29phD\",\"columnSmall\":\"TableRow_columnSmall__2TUf2\",\"dataCell\":\"TableRow_dataCell__33c0W\",\"p\":\"TableRow_p__uQTQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleButtonContainer\":\"ToggleButton_toggleButtonContainer__2sB6s\",\"toggleButtonStructure\":\"ToggleButton_toggleButtonStructure__18dfw\",\"toggleButtonStructureLightTheme\":\"ToggleButton_toggleButtonStructureLightTheme__3Lb-9\",\"toggleButtonBouncingCircle\":\"ToggleButton_toggleButtonBouncingCircle__jqbvM\",\"toggleButtonBouncingCircleLightTheme\":\"ToggleButton_toggleButtonBouncingCircleLightTheme__3eW9e\",\"left\":\"ToggleButton_left__QV4O3\",\"right\":\"ToggleButton_right__31d3P\",\"toggleButtonTitle\":\"ToggleButton_toggleButtonTitle__3W5Pk\",\"toggleButtonTitleLightTheme\":\"ToggleButton_toggleButtonTitleLightTheme__3IvqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarButtonsContainer\":\"NavLinks_navBarButtonsContainer__31pAt\",\"navBarButtonsContainerActive\":\"NavLinks_navBarButtonsContainerActive__2Yc4i\",\"navBarButtonsContainerActiveLightTheme\":\"NavLinks_navBarButtonsContainerActiveLightTheme__20pwn\",\"navBarButton\":\"NavLinks_navBarButton__3GL1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__2C6RD\",\"logoLightTheme\":\"NavBar_logoLightTheme__VOpLV\",\"header\":\"NavBar_header__2psxu\",\"headerLightTheme\":\"NavBar_headerLightTheme__34Avv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\",\"mainLightTheme\":\"Layout_mainLightTheme__2jxdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ZQtN\",\"cardLightTheme\":\"Card_cardLightTheme__2jY3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyWeatherCard\":\"DailyWeather_dailyWeatherCard__3cc4H\",\"dailyWeatherCardLightTheme\":\"DailyWeather_dailyWeatherCardLightTheme__3u14c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__2SwkK\",\"subTitle\":\"HomePage_subTitle__14AE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButtonContainer\":\"MenuButton_menuButtonContainer__3Ix7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3Cw9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitleRow\":\"HourlyForecastPage_subTitleRow__2qzqX\"};","import { createContext, useState } from \"react\";\n\nconst WeatherContext = createContext(\n    {\n        unitSystem: 'imperial',\n        language: 'en',\n        theme: false,\n        changeTheme: () => { },\n        changeLanguaje: () => { },\n        changeUnitSystem: () => { }\n    }\n);\nexport function WeatherContextProvider(props) {\n    const [userUnitSystem, setUserUnitSystem] = useState('imperial');\n    const [userLanguaje, setUserLanguaje] = useState('en');\n    const [userTheme, setUserTheme] = useState(false);\n\n\n    function handleSetUnitSystem() {\n        if (userUnitSystem === 'imperial')\n            setUserUnitSystem('metric');\n        else\n            setUserUnitSystem('imperial');\n    }\n\n    function handleSetLanguaje() {\n        if (userLanguaje === 'en')\n            setUserLanguaje('es');\n        else\n            setUserLanguaje('en');\n    }\n    function handleSetTheme() {\n        setUserTheme(!userTheme);\n    }\n\n    const context = {\n        theme: userTheme,\n        language: userLanguaje,\n        unitSystem: userUnitSystem,\n        changeTheme: handleSetTheme,\n        changeUnitSystem: handleSetUnitSystem,\n        changeLanguaje: handleSetLanguaje,\n    }\n\n    return (\n        <WeatherContext.Provider value={context}>\n            {props.children}\n        </WeatherContext.Provider>\n    )\n}\n\nexport default WeatherContext;","import { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport styles from './MenuButton.module.css';\n\nfunction MenuButton(props) {\n    const weatherContext = useContext(WeatherContext);\n    const theme = weatherContext.theme;\n    return (\n        <div className={styles.menuButtonContainer}>\n            {\n                props.isOpen ?\n                    <FontAwesomeIcon size='lg' color={theme ? 'black' : 'white'} icon={faTimes} onClick={props.handleClick} /> :\n                    <FontAwesomeIcon size='lg' color={theme ? 'black' : 'white'} icon={faBars} onClick={props.handleClick} />\n            }\n        </div>\n    );\n}\n\nexport default MenuButton;","export const homePageTitle = {\n    en: 'Next 5 days forecast',\n    es: 'Pronóstico para los próximos 5 días'\n};\n\nexport const navBarStrings =\n{\n    toggleLanguage: {\n        en: 'Language',\n        es: 'Idioma'\n    },\n    toggleTemperature: {\n        en: 'Temperature',\n        es: 'Temperatura'\n    },\n    toggleTheme: {\n        en: 'Theme',\n        es: 'Tema'\n    }\n}\n\nexport const hourlyStrings = {\n    tableStrings: {\n        en: ['Temperature', 'Feels like', 'Wheater', 'Humidity', 'Clouds'],\n        es: ['Temperatura', 'Se siente como', 'Clima', 'Humedad', 'Nubosidad']\n    }\n}","import classNames from 'classnames';\nimport { useState } from 'react';\nimport styles from './ToggleButton.module.css';\n\nfunction ToggleButton(props) {\n    const [toggleSide, setToggleSide] = useState(false);\n    // let bouncingCircleClassName = {styles.toggleButtonBouncingCircle};\n    const bouncingCircleClasses = classNames(styles.toggleButtonBouncingCircle, { [styles.right]: toggleSide, [styles.left]: !toggleSide, [styles.toggleButtonBouncingCircleLightTheme]: props.themeSelector })\n    const buttonStructureClasses = classNames(styles.toggleButtonStructure, { [styles.toggleButtonStructureLightTheme]: props.themeSelector })\n    const buttonTitleClasses = classNames(styles.toggleButtonTitle, { [styles.toggleButtonTitleLightTheme]: props.themeSelector });\n    function handleToggle(e) {\n        setToggleSide(!toggleSide);\n        props.callbackFunction();\n    }\n\n    return (\n        <span className={styles.toggleButtonContainer}>\n            <label className={buttonTitleClasses}>{props.text}</label>\n            <p>\n                {props.defaultOption}\n                &nbsp;\n                <span className={buttonStructureClasses} onClick={handleToggle}>\n                    <span className={bouncingCircleClasses}></span>\n                </span>\n                &nbsp;\n                {props.alternativeOption}\n            </p>\n        </span>\n    );\n}\n\nexport default ToggleButton;","import classNames from \"classnames\";\nimport { useContext } from \"react\";\nimport { navBarStrings } from \"../../functionality/LocaleStrings\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport ToggleButton from \"../toggle-button/ToggleButton\";\nimport styles from './NavLinks.module.css';\n\nfunction NavLinks(props) {\n    const weatherContext = useContext(WeatherContext);\n    const classes = classNames({ [styles.navBarButtonsContainerActive]: props.isOpen, [styles.navBarButtonsContainer]: !props.isOpen, [styles.navBarButtonsContainerActiveLightTheme]: props.themeSelector });\n    return (\n        <div className={classes}>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt1'} text={navBarStrings.toggleLanguage[weatherContext.languaje]} defaultOption={'EN'} alternativeOption={'ES'} callbackFunction={weatherContext.changeLanguaje} themeSelector={weatherContext.theme} />\n            </div>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt2'} text={navBarStrings.toggleTemperature[weatherContext.languaje]} defaultOption={'°F'} alternativeOption={'°C'} callbackFunction={weatherContext.changeUnitSystem} themeSelector={weatherContext.theme} />\n            </div>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt3'} text={navBarStrings.toggleTheme[weatherContext.languaje]} defaultOption={'Dark'} alternativeOption={'Light'} callbackFunction={weatherContext.changeTheme} themeSelector={weatherContext.theme} />\n            </div>\n        </div>\n    );\n}\nexport default NavLinks;","// import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useContext, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport WeatherContext from '../../store/WheaterContext';\nimport MenuButton from '../menu/MenuButton';\nimport NavLinks from '../menu/NavLinks';\nimport styles from './NavBar.module.css';\n\nfunction NavBar(props) {\n    const weatherContext = useContext(WeatherContext);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const headerClasses = classNames(styles.header, { [styles.headerLightTheme]: props.themeSelector })\n    const logoClasses = classNames(styles.logo, { [styles.logoLightTheme]: props.themeSelector });\n\n    function handleIsOpen() {\n        setIsMenuOpen(!isMenuOpen);\n    }\n    return (\n        <header className={headerClasses}>\n            <div className={logoClasses}>\n                <NavLink to='/' style={{ textDecoration: 'none', color: 'inherit' }}>\n                    WeatherApp\n                </NavLink>\n            </div>\n            <NavLinks isOpen={isMenuOpen} themeSelector={weatherContext.theme} />\n            <MenuButton isOpen={isMenuOpen} handleClick={handleIsOpen} />\n        </header>\n    );\n}\n\nexport default NavBar;\n","function BodyStyling(props) {\n    return (\n        <style>{`body {background-color:${props.themeSelector ? '#E9ECEF' : '#1C1C27'};transition: ease-in 0.2s;}`}</style>\n    );\n}\n\nexport default BodyStyling;","import NavBar from \"./NavBar\";\nimport styles from './Layout.module.css';\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport classNames from \"classnames\";\nimport BodyStyling from \"../body/BodyStyling\";\n\nfunction Layout(props) {\n    const weatherContext = useContext(WeatherContext);\n    const mainClasses = classNames(styles.main, { [styles.mainLightTheme]: weatherContext.theme })\n    return (\n        <>\n            <BodyStyling themeSelector={weatherContext.theme} />\n            <NavBar themeSelector={weatherContext.theme} />\n            <main className={mainClasses}>\n                {props.children}\n            </main>\n        </>\n    );\n\n}\nexport default Layout;","import classNames from 'classnames';\nimport styles from './Card.module.css';\n\nfunction Card(props) {\n    const cardStyles = classNames(styles.card, { [styles.cardLightTheme]: props.themeSelector })\n    return (\n        <div className={cardStyles}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","import { faSun, faCloudSun, faCloud, faCloudRain, faCloudSunRain, faCloudMoonRain, faPooStorm, faSnowflake, faSmog, faRainbow, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n///iconRelations keys according to openweather API available icons, and values\n///according to  available icons in fontawesome free package\nconst iconRelations = {\n    '01d': faSun,\n    '01n': faMoon,\n    '02d': faCloudSun,\n    '03d': faCloud,\n    '03n': faCloud,\n    '04d': faCloud,\n    '04n': faCloud,\n    '09d': faCloudRain,\n    '09n': faCloudRain,\n    '10d': faCloudSunRain,\n    '10n': faCloudMoonRain,\n    '11d': faPooStorm,\n    '11n': faPooStorm,\n    '13d': faSnowflake,\n    '13n': faSnowflake,\n    '50d': faSmog,\n    '50n': faSmog,\n    'default': faRainbow\n}\nexport function iconNameSelection(iconName = '', icons = iconRelations) {\n    if (icons[iconName] && iconName !== 'default') {\n        return icons[iconName];\n    }\n    else {\n        return icons['default'];\n    }\n}\n\n/*\n    icons:\n    openweather=fontAwesome\n    01d=faSun\n    02d=faCloudSun\n    03d=03n=faCloud\n    04d=04n=faClouds(just faCloud, bc faClouds is pro)\n    09d=09n=faCloudRain\n    10d=faCloudSunRain\n    11d=11n=faPooStorm\n    13d=13n=faSnowFlake\n    50d=50n=faSmog (bc fog is pro)\n    01n=faMoon\n    02n=faCloudMoon\n    10n=faCloudMoonRain\n*/","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext } from \"react\";\nimport { iconNameSelection } from \"../../functionality/IconNameSelection\";\nimport { hourlyStrings } from \"../../functionality/LocaleStrings\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport styles from './TableRow.module.css';\n\nfunction TableRow(props) {\n    const weatherContext = useContext(WeatherContext);\n    const strings = hourlyStrings.tableStrings;\n    const language = weatherContext.language;\n    // const rowClassnames = classNames(styles.row, { [styles.rowLightTheme]: !weatherContext.theme })\n    return (\n        <div className={`${styles.row} ${weatherContext.theme ? styles.rowLightTheme : ''}`}>\n            <div className={styles.hourSection}>\n                {props.time}\n            </div>\n            <div className={styles.dataSection}>\n                <div className={styles.columnSmall}>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][0]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{props.temperature}</div>\n                        </div>\n                    </div>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][1]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{props.feelsLike}</div>\n                        </div>\n                    </div>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][2]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{props.description} {<FontAwesomeIcon icon={iconNameSelection(props.icon)} style={{ fontSize: '1rem' }} />}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.columnSmall}>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][3]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}> {props.humidity}</div>\n                        </div>\n                    </div>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][4]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}> {props.clouds}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default TableRow;","import TableRow from \"./TableRow\";\nimport styles from './Table.module.css';\n\nfunction Table(props) {\n    return (\n        <div className={styles.table}>\n            {props.data.map((item, idx) => {\n                return <TableRow key={idx} {...item} />\n            })}\n        </div>\n    );\n}\n\nexport default Table;","export function timeString(date, lang = 'en') {\n    return date.toLocaleTimeString('en', { hour: '2-digit', minute: '2-digit', hourCycle: 'h24' });\n};\n\nexport function monthDay(date, lang = 'en') {\n    return date.toLocaleDateString(lang, { month: 'long', day: 'numeric' });\n}\n\nexport function weekDay(dateString, lang = 'en') {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(lang, { weekday: 'long' });\n}","import { monthDay, timeString, weekDay } from \"./DateStrings\";\n\nfunction formattedDateTime(dateTimeText, lang = 'en', formattingDateFunction = monthDay, formattingTimeFunction = timeString) {\n    const date = new Date(dateTimeText);\n    const monthDayString = monthDay(date, lang);\n    const time = timeString(date, lang);\n    return `${monthDayString}, ${time}`;\n}\n\nexport function firstCharToUpper(dataString = '') {\n    return dataString.charAt(0).toUpperCase() + dataString.slice(1);\n}\n\nconst unitSystems = {\n    metric: 'C',\n    imperial: 'F'\n}\n\nfunction formattedTemperature(temp = 0, unitSystem = 'metric', unitSystemsArray = unitSystems) {\n    return `${temp} °${unitSystemsArray[unitSystem]}`;\n}\n\nfunction formattedCity(data = '') {\n    return data.name + ', ' + data.country;\n}\n\nexport function clean5DaysForecastData(data, lang = 'en', unitSystem = unitSystems['metric']) {\n    const city = formattedCity(data.city);\n    const dataLength = data.list.length;\n    const filteredList = [];\n    for (let index = 0; index < dataLength; index += 8) {\n        const singleData = {};\n        singleData['description'] = firstCharToUpper(data.list[index].weather[0].description);\n        singleData['temperature'] = formattedTemperature(data.list[index].main.temp, unitSystem);\n        singleData['dateTime'] = formattedDateTime(data.list[index].dt * 1000, lang);\n        singleData['weekDay'] = firstCharToUpper(weekDay(data.list[index].dt * 1000, lang));\n        singleData['icon'] = data.list[index].weather[0].icon;\n        singleData['dateTimeOriginal'] = (new Date(data.list[index].dt * 1000)).toDateString();\n        filteredList.push(singleData);\n    }\n    //This part costs more computing time \n    // const filteredList = data.list.filter((value, index) => {\n    //     return index % 8 === 0;\n    // });\n    return [city, filteredList];\n}\n\nexport function cleanHourlyData(data = [], comparingDateString = '', lang = 'en', unitSystem = 'imperial') {\n    const len = data.hourly.length;\n    const filteredData = [];\n    for (let index = 0; index < len; index++) {\n        const realDateTime = new Date(data.hourly[index].dt * 1000);\n        if (realDateTime.toDateString() === comparingDateString) {\n            const singleItem = {\n                time: realDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n                description: firstCharToUpper(data.hourly[index].weather[0].description),\n                temperature: formattedTemperature(data.hourly[index].temp, unitSystem),\n                feelsLike: formattedTemperature(data.hourly[index].feels_like, unitSystem),\n                humidity: data.hourly[index].humidity + '%',\n                clouds: data.hourly[index].clouds + '%',\n                icon: data.hourly[index].weather[0].icon\n            }\n            filteredData.push(singleItem);\n        }\n    }\n    // const filteredData = data.hourly.filter(item => (new Date(item.dt * 1000)).toDateString() === comparingDateString);\n\n    return [\n        {\n            sunrise: (new Date(data.current.sunrise * 1000)).toLocaleTimeString(),\n            sunset: (new Date(data.current.sunset * 1000)).toLocaleTimeString()\n        }, filteredData];\n\n}\n\nexport function hourlyTitle(date = '', lan = 'en') {\n    const monthDayName = firstCharToUpper(monthDay(date, lan));\n    const weekDayName = firstCharToUpper(weekDay(date, lan));\n    return `${weekDayName}, ${monthDayName}`;\n}","import { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../components/layout/Card\";\nimport Table from \"../components/table/Table\";\nimport { cleanHourlyData, hourlyTitle } from \"../functionality/DataPrepare\";\nimport WeatherContext from \"../store/WheaterContext\";\nimport styles from './HourlyForecastPage.module.css';\n\nfunction HourlyForecastPage(props) {\n    const weatherContext = useContext(WeatherContext);\n    const [sunData, setSunData] = useState({});\n    const [receivedData, setReceivedData] = useState([]);\n    const params = useParams();\n    const actualDate = new Date(params.day);\n    useEffect(() => {\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=15.594288299999999&lon=-90.14949879999999&exclude=minutely,alerts&appid=d35ffbb008d9cbfc7bec181cf4685403&units=${weatherContext.unitSystem}&lang=${weatherContext.language}`)\n            .then(response => response.json())\n            .then(data => {\n                const [sun, hourlyData] = cleanHourlyData(data, params.day, weatherContext.language, weatherContext.unitSystem);\n                setSunData(sun);\n                setReceivedData(hourlyData);\n            });\n    }, [weatherContext.language, weatherContext.unitSystem, params.day])\n    return (\n        <>\n            <div >\n                <h1>{hourlyTitle(actualDate, weatherContext.language)} </h1>\n                <div className={styles.subTitleRow}>\n                    <div>\n                        <FontAwesomeIcon icon={faSun} style={{ fontSize: '2rem' }} />\n                        &nbsp;\n                        {sunData.sunrise}\n                    </div>\n                    <div>\n                        <FontAwesomeIcon icon={faMoon} style={{ fontSize: '2rem' }} />\n                        &nbsp;\n                        {sunData.sunset}\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Card themeSelector={weatherContext.theme}>\n                    <Table data={receivedData} />\n                </Card>\n            </div>\n        </>\n    );\n}\nexport default HourlyForecastPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styles from './DailyWeather.module.css';\nimport { iconNameSelection } from \"../../functionality/IconNameSelection\";\nimport classNames from 'classnames';\n\nfunction DailyWeather(props) {\n    const dailyWeatherCardClasses = classNames(styles.dailyWeatherCard, { [styles.dailyWeatherCardLightTheme]: props.themeSelector })\n    return (\n        <div className={dailyWeatherCardClasses}>\n            <h3>{props.weekDay}</h3>\n            <p>{props.dateTime}</p>\n            <FontAwesomeIcon icon={iconNameSelection(props.icon)} style={{ fontSize: '5rem' }} />\n            <h2>{props.temperature}</h2>\n            <h4>{props.description}</h4>\n        </div>\n    );\n}\n\nexport default DailyWeather;","import { useContext, useEffect, useState } from \"react\";\nimport DailyWeather from \"../components/daily-weather/DailyWeather\";\nimport Card from \"../components/layout/Card\";\nimport styles from './HomePage.module.css';\nimport { homePageTitle } from \"../functionality/LocaleStrings\";\nimport WeatherContext from \"../store/WheaterContext\";\nimport { NavLink } from \"react-router-dom\";\nimport { clean5DaysForecastData } from \"../functionality/DataPrepare\";\n\nfunction HomePage(props) {\n    const [city, setCity] = useState('');\n    const [list, setList] = useState([]);\n    const [apiCallCondition, setApiCallCondition] = useState('id=5128581');\n\n    const weatherContext = useContext(WeatherContext);\n\n    const language = weatherContext.language;\n    const unitSystem = weatherContext.unitSystem;\n    useEffect(() => {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setApiCallCondition(`lat=${position.coords.latitude}&lon=${position.coords.longitude}`);\n                console.log(position.coords)\n            });\n        }\n    }, [])\n    useEffect(() => {\n        //ny: 5128581\n        //quet: 3590979\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?${apiCallCondition}&appid=d35ffbb008d9cbfc7bec181cf4685403&units=${unitSystem}&lang=${language}`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                const [cityData, listData] = clean5DaysForecastData(data, language, unitSystem);\n                setCity(cityData);\n                setList(listData);\n            });\n    }, [setCity, setList, setApiCallCondition, language, unitSystem, apiCallCondition]);\n    return (\n        <>\n            <h1 className={styles.title}>{homePageTitle[language]}</h1>\n            <Card themeSelector={weatherContext.theme} >\n                <h3 className={styles.subTitle}>{city}</h3>\n                {\n\n                    list.map((item, idx) => {\n                        return (\n                            <NavLink\n                                key={idx}\n                                to={`/hourlyForecast/${item.dateTimeOriginal}`}\n                                style={{ textDecoration: 'none', color: 'inherit' }}\n                            >\n                                <DailyWeather\n                                    weekDay={item.weekDay}\n                                    dateTime={item.dateTime}\n                                    icon={item.icon}\n                                    description={item.description}\n                                    temperature={item.temperature}\n                                    themeSelector={weatherContext.theme}\n                                />\n                            </NavLink>\n                        )\n                    })\n                }\n            </Card>\n        </>\n    );\n}\n\nexport default HomePage;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport HourlyForecastPage from './pages/HourlyForecastPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/hourlyForecast/:day'>\n          <HourlyForecastPage />\n        </Route>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { WeatherContextProvider } from './store/WheaterContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherContextProvider>\n      <Router basename='/weatherAppReact'>\n        <App />\n      </Router>\n    </WeatherContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}