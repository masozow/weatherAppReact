{"version":3,"sources":["components/table/TableRow.module.css","components/menu/NavLinks.module.css","components/toggle-button/ToggleButton.module.css","components/search-box/searchBox.module.css","components/layout/NavBar.module.css","components/modal/modal.module.css","pages/HourlyForecastPage.module.css","components/modal/backdrop.module.css","components/layout/Card.module.css","components/layout/Layout.module.css","components/daily-weather/DailyWeather.module.css","pages/HomePage.module.css","components/menu/MenuButton.module.css","components/table/Table.module.css","store/WheaterContext.js","components/menu/MenuButton.js","functionality/LocaleStrings.js","components/toggle-button/ToggleButton.js","components/menu/NavLinks.js","components/modal/Backdrop.js","components/search-box/SearchIcon.js","components/search-box/SearchTextBox.js","functionality/APIKey.js","components/layout/Card.js","components/modal/Li.js","components/modal/Modal.js","components/search-box/SearchBox.js","components/layout/NavBar.js","components/body/BodyStyling.js","components/layout/Layout.js","functionality/IconNameSelection.js","components/table/TableRow.js","components/table/Table.js","functionality/DateStrings.js","functionality/DataPrepare.js","pages/HourlyForecastPage.js","components/daily-weather/DailyWeather.js","components/timer/Timer.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","WeatherContext","createContext","unitSystem","language","theme","apiCallCondition","overrideGeolocation","changeTheme","changeLanguage","changeUnitSystem","changeApiCallCondition","changeOverrideGeolocation","WeatherContextProvider","props","useState","userUnitSystem","setUserUnitSystem","userLanguage","setUserLanguage","userTheme","setUserTheme","userApiCallCondition","setUserApiCallCondition","userOverrideGeolocation","setUserOverrideGeolocation","context","data","Provider","value","children","MenuButton","useContext","className","styles","menuButtonContainer","isOpen","size","color","icon","faTimes","style","filter","onClick","handleClick","faBars","homePageTitle","en","es","navBarStrings","toggleLanguage","toggleTemperature","toggleTheme","hourlyStrings","alternativeMessages","loading","unavailableData","cityDataUnavailable","ToggleButton","toggleSide","setToggleSide","bouncingCircleClasses","classNames","toggleButtonBouncingCircle","right","left","toggleButtonBouncingCircleLightTheme","themeSelector","buttonStructureClasses","toggleButtonStructure","toggleButtonStructureLightTheme","buttonTitleClasses","toggleButtonTitle","toggleButtonTitleLightTheme","toggleButtonContainer","text","defaultOption","e","callbackFunction","alternativeOption","NavLinks","weatherContext","classes","navBarButtonsContainerActive","navBarButtonsContainer","navBarButtonsContainerActiveLightTheme","navBarButton","navBarButtonBorder","navBarButtonBorderLightTheme","navBarButtonBorderDarkTheme","Backdrop","backdropStyles","backdrop","active","isBackdropVisible","isBackdropVisibleHandler","SearchIcon","faSearch","searchIcon","SearchTextBox","forwardRef","ref","useEffect","current","focus","searchTextBoxStyles","textBox","textBoxLight","textBox_open","textBoxIsVisible","type","placeholder","APIKey","Card","cardStyles","card","cardLightTheme","Li","Modal","modalStyles","modal","isModalVisible","itemClickHandler","event","param","formatted","geometry","lat","lng","closeModalBackdrophandler","Array","isArray","map","item","idx","SearchBox","textBoxIsShown","setTextBoxIsShown","modalIsShown","setModalIsShown","userData","setUserData","searchQueryRef","createRef","hideModalBackdropHandler","console","log","handleSubmit","preventDefault","searchQuery","trim","length","fetch","then","response","json","results","searchBox","onSubmit","onBlur","autoFocus","NavBar","isMenuOpen","setIsMenuOpen","headerClasses","header","headerLightTheme","logoClasses","logo","logoLightTheme","handleIsOpen","to","textDecoration","padding","margin","BodyStyling","Layout","mainClasses","main","mainLightTheme","iconRelations","faSun","faMoon","faCloudSun","faCloudMoon","faCloud","faCloudRain","faCloudSunRain","faCloudMoonRain","faPooStorm","faSnowflake","faSmog","faRainbow","iconNameSelection","iconName","icons","TableRow","strings","row","rowLightTheme","hourSection","time","dataSection","columnSmall","dataCell","column","p","temperature","feelsLike","description","fontSize","humidity","clouds","Table","table","timeString","date","toLocaleTimeString","hour","minute","hourCycle","monthDay","lang","toLocaleDateString","month","day","weekDay","dateString","Date","weekday","formattedDateTime","dateTimeText","monthDayString","firstCharToUpper","dataString","charAt","toUpperCase","slice","unitSystems","metric","imperial","formattedTemperature","temp","unitSystemsArray","formattedCity","name","country","hourlyTitle","lan","monthDayName","weekDayName","HourlyForecastPage","sunData","setSunData","receivedData","setReceivedData","isLoading","setIsLoading","params","useParams","actualDate","coords","comparingDateString","sunrise","sunset","len","hourly","filteredData","index","realDateTime","dt","toDateString","singleItem","weather","feels_like","push","cleanHourlyData","sun","hourlyData","content","subTitleRow","alternative","DailyWeather","dailyWeatherCardClasses","dailyWeatherCard","dailyWeatherCardLightTheme","dateTime","Timer","interval","setInterval","setTimer","timer","clearInterval","HomePage","city","setCity","list","setList","navigator","geolocation","getCurrentPosition","position","latitude","longitude","error","enableHighAccuracy","timeout","maximumAge","undefined","dataLength","filteredList","singleData","clean5DaysForecastData","cityData","listData","title","subTitle","dateTimeOriginal","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3f29368c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TableRow_row__3sq-P\",\"rowLightTheme\":\"TableRow_rowLightTheme__1pHx3\",\"hourSection\":\"TableRow_hourSection__HA1GU\",\"dataSection\":\"TableRow_dataSection__1aPFq\",\"column\":\"TableRow_column__29phD\",\"columnSmall\":\"TableRow_columnSmall__2TUf2\",\"dataCell\":\"TableRow_dataCell__33c0W\",\"p\":\"TableRow_p__uQTQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarButtonsContainer\":\"NavLinks_navBarButtonsContainer__31pAt\",\"navBarButtonsContainerActive\":\"NavLinks_navBarButtonsContainerActive__2Yc4i\",\"navBarButtonsContainerActiveLightTheme\":\"NavLinks_navBarButtonsContainerActiveLightTheme__20pwn\",\"navBarButton\":\"NavLinks_navBarButton__3GL1m\",\"navBarButtonBorder\":\"NavLinks_navBarButtonBorder__c78zt\",\"navBarButtonBorderDarkTheme\":\"NavLinks_navBarButtonBorderDarkTheme__2GXbr\",\"navBarButtonBorderLightTheme\":\"NavLinks_navBarButtonBorderLightTheme__1Kp_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleButtonContainer\":\"ToggleButton_toggleButtonContainer__2sB6s\",\"toggleButtonStructure\":\"ToggleButton_toggleButtonStructure__18dfw\",\"toggleButtonStructureLightTheme\":\"ToggleButton_toggleButtonStructureLightTheme__3Lb-9\",\"toggleButtonBouncingCircle\":\"ToggleButton_toggleButtonBouncingCircle__jqbvM\",\"toggleButtonBouncingCircleLightTheme\":\"ToggleButton_toggleButtonBouncingCircleLightTheme__3eW9e\",\"left\":\"ToggleButton_left__QV4O3\",\"right\":\"ToggleButton_right__31d3P\",\"toggleButtonTitle\":\"ToggleButton_toggleButtonTitle__3W5Pk\",\"toggleButtonTitleLightTheme\":\"ToggleButton_toggleButtonTitleLightTheme__3IvqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"searchBox_searchBox__3jr2_\",\"searchIcon\":\"searchBox_searchIcon__30RNM\",\"textBox\":\"searchBox_textBox__3nscU\",\"textBoxLight\":\"searchBox_textBoxLight__25DLD\",\"textBox_open\":\"searchBox_textBox_open__2_PRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__2C6RD\",\"logoLightTheme\":\"NavBar_logoLightTheme__VOpLV\",\"header\":\"NavBar_header__2psxu\",\"headerLightTheme\":\"NavBar_headerLightTheme__34Avv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"active\":\"modal_active__-76bp\",\"card\":\"modal_card__1x4YE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitleRow\":\"HourlyForecastPage_subTitleRow__2qzqX\",\"loading\":\"HourlyForecastPage_loading__21mCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"backdrop_backdrop__2DiaR\",\"active\":\"backdrop_active__23CvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ZQtN\",\"cardLightTheme\":\"Card_cardLightTheme__2jY3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\",\"mainLightTheme\":\"Layout_mainLightTheme__2jxdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyWeatherCard\":\"DailyWeather_dailyWeatherCard__3cc4H\",\"dailyWeatherCardLightTheme\":\"DailyWeather_dailyWeatherCardLightTheme__3u14c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__2SwkK\",\"subTitle\":\"HomePage_subTitle__14AE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButtonContainer\":\"MenuButton_menuButtonContainer__3Ix7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3Cw9e\"};","import { createContext, useState } from \"react\";\n\nconst WeatherContext = createContext(\n    {\n        unitSystem: 'imperial',\n        language: 'en',\n        theme: false,\n        apiCallCondition: 'lat=40.776676&lon=-73.971321',\n        overrideGeolocation: false,\n        changeTheme: () => { },\n        changeLanguage: () => { },\n        changeUnitSystem: () => { },\n        changeApiCallCondition: () => { },\n        changeOverrideGeolocation: () => { }\n    }\n);\nexport function WeatherContextProvider(props) {\n    const [userUnitSystem, setUserUnitSystem] = useState('imperial');\n    const [userLanguage, setUserLanguage] = useState('en');\n    const [userTheme, setUserTheme] = useState(false);\n    const [userApiCallCondition, setUserApiCallCondition] = useState('lat=40.776676&lon=-73.971321')\n    const [userOverrideGeolocation, setUserOverrideGeolocation] = useState(false);\n\n    function handleSetUnitSystem() {\n        if (userUnitSystem === 'imperial')\n            setUserUnitSystem('metric');\n        else\n            setUserUnitSystem('imperial');\n    }\n\n    function handleSetLanguage() {\n        if (userLanguage === 'en')\n            setUserLanguage('es');\n        else\n            setUserLanguage('en');\n    }\n\n    function handleSetTheme() {\n        setUserTheme(!userTheme);\n    }\n\n    function handleSetApiCallCondition(data) {\n        setUserApiCallCondition(data);\n        setUserOverrideGeolocation(true);\n    }\n    const context = {\n        theme: userTheme,\n        language: userLanguage,\n        unitSystem: userUnitSystem,\n        apiCallCondition: userApiCallCondition,\n        overrideGeolocation: userOverrideGeolocation,\n        changeTheme: handleSetTheme,\n        changeUnitSystem: handleSetUnitSystem,\n        changeLanguage: handleSetLanguage,\n        changeApiCallCondition: handleSetApiCallCondition\n    }\n\n    return (\n        <WeatherContext.Provider value={context}>\n            {props.children}\n        </WeatherContext.Provider>\n    )\n}\n\nexport default WeatherContext;","import { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport styles from './MenuButton.module.css';\n\nfunction MenuButton(props) {\n    const weatherContext = useContext(WeatherContext);\n    const theme = weatherContext.theme;\n    return (\n        <div className={styles.menuButtonContainer}>\n            {\n                props.isOpen ?\n                    <FontAwesomeIcon size='lg' color={theme ? 'black' : 'white'} icon={faTimes} style={{ filter: 'drop-shadow(0 0 2px white)' }} onClick={props.handleClick} /> :\n                    <FontAwesomeIcon size='lg' color={theme ? 'black' : 'white'} icon={faBars} onClick={props.handleClick} />\n            }\n        </div>\n    );\n}\n\nexport default MenuButton;","export const homePageTitle = {\n    en: 'Next 5 days forecast',\n    es: 'Pronóstico para los próximos 5 días'\n};\n\nexport const navBarStrings =\n{\n    toggleLanguage: {\n        en: 'Language',\n        es: 'Idioma'\n    },\n    toggleTemperature: {\n        en: 'Temperature',\n        es: 'Temperatura'\n    },\n    toggleTheme: {\n        en: 'Theme',\n        es: 'Tema'\n    }\n}\n\nexport const hourlyStrings = {\n    tableStrings: {\n        en: ['Temperature', 'Feels like', 'Weather', 'Humidity', 'Clouds'],\n        es: ['Temperatura', 'Se siente como', 'Clima', 'Humedad', 'Nubosidad']\n    }\n}\n\nexport const alternativeMessages = {\n    loading: {\n        en: 'Loading',\n        es: 'Cargando'\n    },\n    unavailableData: {\n        en: 'Due to the usage of Open Weather Map API free tier, this data is currently unavailable.',\n        es: 'Debido al uso del plan gratuito de la API de Open Weather Map, estos datos no están disponibles actualmente.'\n    },\n    cityDataUnavailable:\n    {\n        en: 'Try with other city',\n        es: 'Prueba con otra ciudad'\n    }\n}","import classNames from 'classnames';\nimport { useState } from 'react';\nimport styles from './ToggleButton.module.css';\n\nfunction ToggleButton(props) {\n    const [toggleSide, setToggleSide] = useState(false);\n    // let bouncingCircleClassName = {styles.toggleButtonBouncingCircle};\n    const bouncingCircleClasses = classNames(styles.toggleButtonBouncingCircle, { [styles.right]: toggleSide, [styles.left]: !toggleSide, [styles.toggleButtonBouncingCircleLightTheme]: props.themeSelector })\n    const buttonStructureClasses = classNames(styles.toggleButtonStructure, { [styles.toggleButtonStructureLightTheme]: props.themeSelector })\n    const buttonTitleClasses = classNames(styles.toggleButtonTitle, { [styles.toggleButtonTitleLightTheme]: props.themeSelector });\n    function handleToggle(e) {\n        setToggleSide(!toggleSide);\n        props.callbackFunction();\n    }\n\n    return (\n        <span className={styles.toggleButtonContainer}>\n            <label className={buttonTitleClasses}>{props.text}</label>\n            <p>\n                {props.defaultOption}\n                &nbsp;\n                <span className={buttonStructureClasses} onClick={handleToggle}>\n                    <span className={bouncingCircleClasses}></span>\n                </span>\n                &nbsp;\n                {props.alternativeOption}\n            </p>\n        </span>\n    );\n}\n\nexport default ToggleButton;","import classNames from \"classnames\";\nimport { useContext } from \"react\";\nimport { navBarStrings } from \"../../functionality/LocaleStrings\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport ToggleButton from \"../toggle-button/ToggleButton\";\nimport styles from './NavLinks.module.css';\n\nfunction NavLinks(props) {\n    const weatherContext = useContext(WeatherContext);\n    const classes = classNames({ [styles.navBarButtonsContainerActive]: props.isOpen, [styles.navBarButtonsContainer]: !props.isOpen, [styles.navBarButtonsContainerActiveLightTheme]: props.themeSelector });\n    return (\n        <div className={classes}>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt1'} text={navBarStrings.toggleLanguage[weatherContext.language]} defaultOption={'EN'} alternativeOption={'ES'} callbackFunction={weatherContext.changeLanguage} themeSelector={weatherContext.theme} />\n            </div>\n            <div className={`${styles.navBarButtonBorder} ${weatherContext.theme ? styles.navBarButtonBorderLightTheme : styles.navBarButtonBorderDarkTheme}`}></div>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt2'} text={navBarStrings.toggleTemperature[weatherContext.language]} defaultOption={'°F'} alternativeOption={'°C'} callbackFunction={weatherContext.changeUnitSystem} themeSelector={weatherContext.theme} />\n            </div>\n            <div className={`${styles.navBarButtonBorder} ${weatherContext.theme ? styles.navBarButtonBorderLightTheme : styles.navBarButtonBorderDarkTheme}`}></div>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt3'} text={navBarStrings.toggleTheme[weatherContext.language]} defaultOption={'Dark'} alternativeOption={'Light'} callbackFunction={weatherContext.changeTheme} themeSelector={weatherContext.theme} />\n            </div>\n        </div>\n    );\n}\nexport default NavLinks;","import classNames from 'classnames';\n// import { useState } from 'react';\n// import { useEffect } from 'react';\nimport styles from './backdrop.module.css';\n\nfunction Backdrop(props) {\n\n    const backdropStyles = classNames(styles.backdrop, { [styles.active]: props.isBackdropVisible })\n\n    return (\n        <div className={backdropStyles} onClick={props.isBackdropVisibleHandler}>\n        </div>\n    );\n\n}\n\nexport default Backdrop;","import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from './searchBox.module.css';\n\nfunction SearchIcon(props) {\n    return (\n        <FontAwesomeIcon icon={faSearch} className={styles.searchIcon} onClick={props.handleClick} />\n        // onMouseEnter={props.showTextBox} \n    )\n};\n\nexport default SearchIcon;","import classNames from 'classnames';\nimport styles from './searchBox.module.css';\nimport { forwardRef, useContext, useEffect } from 'react';\nimport WeatherContext from '../../store/WheaterContext';\n\nconst SearchTextBox = forwardRef((props, ref) => {\n\n    useEffect(() => {\n        ref.current.focus();\n    }, [ref])\n\n    const weatherContext = useContext(WeatherContext);\n\n    const searchTextBoxStyles = classNames(styles.textBox, { [styles.textBoxLight]: weatherContext.theme }, { [styles.textBox_open]: props.textBoxIsVisible });\n    return <input type=\"text\" placeholder=\"Search for a city\" ref={ref} className={searchTextBoxStyles} />\n});\n\nexport default SearchTextBox;","export const APIKey = 'd35ffbb008d9cbfc7bec181cf4685403';\nexport const OpenCageGeocodingAPIKey = 'cd71a160436b45b7826b1e37253fcc76';","import classNames from 'classnames';\nimport styles from './Card.module.css';\n\nfunction Card(props) {\n    //props.classes is necesarry to override on particular cases (just because the use of css modules)\n    const cardStyles = classNames(styles.card, { [styles.cardLightTheme]: props.themeSelector }, props.classes)\n    return (\n        <div className={cardStyles}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","function Li(props) {\n    return (\n        <li onClick={props.handleClick}>\n            {props.children}\n        </li>\n    );\n}\n\nexport default Li;","import classNames from \"classnames\";\nimport Card from \"../layout/Card\";\nimport styles from './modal.module.css';\nimport WeatherContext from \"../../store/WheaterContext\";\nimport { useContext } from \"react\";\nimport Li from \"./Li\";\n\nfunction Modal(props) {\n    //the next line needs some work\n    // const showModal = props.data.length > 1 ? props.isModalVisible : false;\n    const modalStyles = classNames(styles.modal, { [styles.active]: props.isModalVisible });\n    const weatherContext = useContext(WeatherContext);\n\n    const itemClickHandler = (event, param = {}) => {\n        if (param.formatted) {\n            weatherContext.changeApiCallCondition(`lat=${param.geometry.lat}&lon=${param.geometry.lng}`);\n        }\n        props.closeModalBackdrophandler();\n    }\n\n    const formattedData = (data) => {\n        if (Array.isArray(data)) {\n            return (\n                <>\n                    < ul > {\n                        props.data.map((item, idx) => {\n                            return (\n                                <Li key={idx} handleClick={event => itemClickHandler(event, item)} >\n                                    {item.formatted ? `${item.formatted}` : item}\n                                </Li>\n                            )\n                        })\n                    }\n                    </ul >\n                </>\n            );\n        }\n        else {\n            return (\n                <p onClick={itemClickHandler} >{data}</p>\n            )\n        }\n    }\n    return (\n        <div className={modalStyles}>\n            <Card themeSelector={weatherContext.theme} classes={styles.card} >\n                {\n                    formattedData(props.data)\n                }\n            </Card>\n        </div>\n    );\n}\n\nexport default Modal;","import styles from './searchBox.module.css';\nimport SearchIcon from './SearchIcon';\nimport SearchTextBox from './SearchTextBox';\nimport { useState, createRef, useContext } from \"react\";\nimport { OpenCageGeocodingAPIKey } from '../../functionality/APIKey';\nimport Modal from '../modal/Modal';\nimport Backdrop from '../modal/Backdrop';\nimport WeatherContext from '../../store/WheaterContext';\nimport { alternativeMessages } from '../../functionality/LocaleStrings';\n\n\nfunction SearchBox(props) {\n    const [textBoxIsShown, setTextBoxIsShown] = useState(false);\n    const [modalIsShown, setModalIsShown] = useState(false);\n    const [userData, setUserData] = useState([]);\n    const searchQueryRef = createRef(); //using createRef instead of useRef\n    const weatherContext = useContext(WeatherContext);\n\n    const hideTextBoxHandler = () => {\n        if (searchQueryRef.current.value.trim().length === 0)\n            setTextBoxIsShown(false);\n    };\n    const hideModalBackdropHandler = () => {\n        setModalIsShown(false);\n        console.log('backdrop has been clicked');\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (!modalIsShown)\n            setTextBoxIsShown(true);\n        const searchQuery = searchQueryRef.current.value;\n        if (textBoxIsShown && searchQuery.trim().length !== 0) {\n            console.log('searching for: ', searchQuery);\n\n            fetch(`https://api.opencagedata.com/geocode/v1/json?q=${searchQuery}&key=${OpenCageGeocodingAPIKey}&language=${weatherContext.language}&pretty=1`)\n                .then((response) => {\n                    return response.json();\n                }).then((data) => {\n                    console.log(data.results);\n                    switch (data.results.length) {\n                        case 1:\n                            console.log('Just 1 record returned');\n                            weatherContext.changeApiCallCondition(`lat=${data.results[0].geometry.lat}&lon=${data.results[0].geometry.lng}`)\n                            break;\n                        case 0:\n                            console.log('No records')\n                            setUserData(alternativeMessages.cityDataUnavailable[weatherContext.language]);\n                            setModalIsShown(true);\n                            break;\n                        default:\n                            setUserData(data.results);\n                            setModalIsShown(true);\n                            break;\n                    }\n                });\n        }\n    }\n\n    return (\n        <form className={styles.searchBox} onSubmit={handleSubmit} onBlur={hideTextBoxHandler}>\n            <SearchTextBox autoFocus textBoxIsVisible={textBoxIsShown} ref={searchQueryRef} />\n            <SearchIcon handleClick={handleSubmit} />\n            {/* showTextBox={showTextBoxHandler} */}\n            <Modal isModalVisible={modalIsShown} data={userData} closeModalBackdrophandler={hideModalBackdropHandler} />\n            <Backdrop isBackdropVisible={modalIsShown} isBackdropVisibleHandler={hideModalBackdropHandler} />\n        </form>\n    );\n}\n\nexport default SearchBox;","// import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useContext, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport WeatherContext from '../../store/WheaterContext';\nimport MenuButton from '../menu/MenuButton';\nimport NavLinks from '../menu/NavLinks';\nimport Backdrop from '../modal/Backdrop';\nimport SearchBox from '../search-box/SearchBox';\nimport styles from './NavBar.module.css';\n\nfunction NavBar(props) {\n    const weatherContext = useContext(WeatherContext);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const headerClasses = classNames(styles.header, { [styles.headerLightTheme]: props.themeSelector })\n    const logoClasses = classNames(styles.logo, { [styles.logoLightTheme]: props.themeSelector });\n\n    function handleIsOpen() {\n        setIsMenuOpen(!isMenuOpen);\n    }\n    return (\n        <header className={headerClasses}>\n            <div className={logoClasses}>\n                <NavLink to='/' style={{ textDecoration: 'none', color: 'inherit', padding: '0', margin: '0' }}>\n                    WeatherApp\n                </NavLink>\n            </div>\n            <SearchBox />\n            <NavLinks isOpen={isMenuOpen} themeSelector={weatherContext.theme} />\n            <MenuButton isOpen={isMenuOpen} handleClick={handleIsOpen} />\n            <Backdrop isBackdropVisibleHandler={handleIsOpen} isBackdropVisible={isMenuOpen} />\n        </header>\n    );\n}\n\nexport default NavBar;\n","function BodyStyling(props) {\n    return (\n        <style>{`body {background-color:${props.themeSelector ? '#E9ECEF' : '#1C1C27'};transition: ease-in 0.2s;}`}</style>\n    );\n}\n\nexport default BodyStyling;","import NavBar from \"./NavBar\";\nimport styles from './Layout.module.css';\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport classNames from \"classnames\";\nimport BodyStyling from \"../body/BodyStyling\";\n\nfunction Layout(props) {\n    const weatherContext = useContext(WeatherContext);\n    const mainClasses = classNames(styles.main, { [styles.mainLightTheme]: weatherContext.theme })\n    return (\n        <>\n            <BodyStyling themeSelector={weatherContext.theme} />\n            <NavBar themeSelector={weatherContext.theme} />\n            <main className={mainClasses}>\n                {props.children}\n            </main>\n        </>\n    );\n\n}\nexport default Layout;","import { faSun, faCloudSun, faCloud, faCloudRain, faCloudSunRain, faCloudMoonRain, faPooStorm, faSnowflake, faSmog, faRainbow, faMoon, faCloudMoon } from \"@fortawesome/free-solid-svg-icons\";\n///iconRelations keys according to openweather API available icons, and values\n///according to  available icons in fontawesome free package\nconst iconRelations = {\n    '01d': faSun,\n    '01n': faMoon,\n    '02d': faCloudSun,\n    '02n': faCloudMoon,\n    '03d': faCloud,\n    '03n': faCloud,\n    '04d': faCloud,\n    '04n': faCloud,\n    '09d': faCloudRain,\n    '09n': faCloudRain,\n    '10d': faCloudSunRain,\n    '10n': faCloudMoonRain,\n    '11d': faPooStorm,\n    '11n': faPooStorm,\n    '13d': faSnowflake,\n    '13n': faSnowflake,\n    '50d': faSmog,\n    '50n': faSmog,\n    'default': faRainbow\n}\nexport function iconNameSelection(iconName = '', icons = iconRelations) {\n    if (icons[iconName] && iconName !== 'default') {\n        return icons[iconName];\n    }\n    else {\n        return icons['default'];\n    }\n}\n\n/*\n    icons:\n    openweather=fontAwesome\n    01d=faSun\n    02d=faCloudSun\n    03d=03n=faCloud\n    04d=04n=faClouds(just faCloud, bc faClouds is pro)\n    09d=09n=faCloudRain\n    10d=faCloudSunRain\n    11d=11n=faPooStorm\n    13d=13n=faSnowFlake\n    50d=50n=faSmog (bc fog is pro)\n    01n=faMoon\n    02n=faCloudMoon\n    10n=faCloudMoonRain\n*/","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext } from \"react\";\nimport { iconNameSelection } from \"../../functionality/IconNameSelection\";\nimport { hourlyStrings } from \"../../functionality/LocaleStrings\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport styles from './TableRow.module.css';\n\nfunction TableRow(props) {\n    const weatherContext = useContext(WeatherContext);\n    const strings = hourlyStrings.tableStrings;\n    const language = weatherContext.language;\n    // const rowClassnames = classNames(styles.row, { [styles.rowLightTheme]: !weatherContext.theme })\n    return (\n        <div className={`${styles.row} ${weatherContext.theme ? styles.rowLightTheme : ''}`}>\n            <div className={styles.hourSection}>\n                {props.time}\n            </div>\n            <div className={styles.dataSection}>\n                <div className={styles.columnSmall}>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][0]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{props.temperature}</div>\n                        </div>\n                    </div>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][1]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{props.feelsLike}</div>\n                        </div>\n                    </div>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][2]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{props.description} {<FontAwesomeIcon icon={iconNameSelection(props.icon)} style={{ fontSize: '1rem' }} />}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.columnSmall}>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][3]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}> {props.humidity}</div>\n                        </div>\n                    </div>\n                    <div className={styles.dataCell}>\n                        <div className={styles.column}>\n                            <div className={styles.p}>{strings[language][4]}:</div>\n                        </div>\n                        <div className={styles.column}>\n                            <div className={styles.p}> {props.clouds}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default TableRow;","import TableRow from \"./TableRow\";\nimport styles from './Table.module.css';\n\nfunction Table(props) {\n    return (\n        <div className={styles.table}>\n            {props.data.map((item, idx) => {\n                return <TableRow key={idx} {...item} />\n            })}\n        </div>\n    );\n}\n\nexport default Table;","export function timeString(date, lang = 'en') {\n    return date.toLocaleTimeString('en', { hour: '2-digit', minute: '2-digit', hourCycle: 'h24' });\n};\n\nexport function monthDay(date, lang = 'en') {\n    return date.toLocaleDateString(lang, { month: 'long', day: 'numeric' });\n}\n\nexport function weekDay(dateString, lang = 'en') {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(lang, { weekday: 'long' });\n}","import { monthDay, timeString, weekDay } from \"./DateStrings\";\n\nfunction formattedDateTime(dateTimeText, lang = 'en', formattingDateFunction = monthDay, formattingTimeFunction = timeString) {\n    const date = new Date(dateTimeText);\n    const monthDayString = monthDay(date, lang);\n    const time = timeString(date, lang);\n    return `${monthDayString}, ${time}`;\n}\n\nexport function firstCharToUpper(dataString = '') {\n    return dataString.charAt(0).toUpperCase() + dataString.slice(1);\n}\n\nconst unitSystems = {\n    metric: 'C',\n    imperial: 'F'\n}\n\nfunction formattedTemperature(temp = 0, unitSystem = 'metric', unitSystemsArray = unitSystems) {\n    return `${temp} °${unitSystemsArray[unitSystem]}`;\n}\n\nfunction formattedCity(data = '') {\n    return data.name + ', ' + data.country;\n}\n\nexport function clean5DaysForecastData(data, lang = 'en', unitSystem = unitSystems['metric']) {\n    if (typeof (data) === undefined)\n        return ['', []];\n    const city = formattedCity(data.city);\n    const dataLength = data.list.length;\n    const filteredList = [];\n    for (let index = 0; index < dataLength; index += 8) {\n        const singleData = {};\n        singleData['description'] = firstCharToUpper(data.list[index].weather[0].description);\n        singleData['temperature'] = formattedTemperature(data.list[index].main.temp, unitSystem);\n        singleData['dateTime'] = formattedDateTime(data.list[index].dt * 1000, lang);\n        singleData['weekDay'] = firstCharToUpper(weekDay(data.list[index].dt * 1000, lang));\n        singleData['icon'] = data.list[index].weather[0].icon;\n        singleData['dateTimeOriginal'] = (new Date(data.list[index].dt * 1000)).toDateString();\n        filteredList.push(singleData);\n    }\n    //This part costs more computing time \n    // const filteredList = data.list.filter((value, index) => {\n    //     return index % 8 === 0;\n    // });\n    return [city, filteredList];\n\n}\n\nexport function cleanHourlyData(data = [], comparingDateString = '', lang = 'en', unitSystem = 'imperial') {\n    if (data.length === 0)\n        return [\n            {\n                sunrise: '',\n                sunset: ''\n            }, []\n        ];\n    const len = data.hourly.length;\n    const filteredData = [];\n    for (let index = 0; index < len; index++) {\n        const realDateTime = new Date(data.hourly[index].dt * 1000);\n        if (realDateTime.toDateString() === comparingDateString) {\n            const singleItem = {\n                time: realDateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n                description: firstCharToUpper(data.hourly[index].weather[0].description),\n                temperature: formattedTemperature(data.hourly[index].temp, unitSystem),\n                feelsLike: formattedTemperature(data.hourly[index].feels_like, unitSystem),\n                humidity: data.hourly[index].humidity + '%',\n                clouds: data.hourly[index].clouds + '%',\n                icon: data.hourly[index].weather[0].icon\n            }\n            filteredData.push(singleItem);\n        }\n    }\n    // const filteredData = data.hourly.filter(item => (new Date(item.dt * 1000)).toDateString() === comparingDateString);\n\n    return [\n        {\n            sunrise: (new Date(data.current.sunrise * 1000)).toLocaleTimeString(),\n            sunset: (new Date(data.current.sunset * 1000)).toLocaleTimeString()\n        }, filteredData];\n}\n\nexport function hourlyTitle(date = '', lan = 'en') {\n    const monthDayName = firstCharToUpper(monthDay(date, lan));\n    const weekDayName = firstCharToUpper(weekDay(date, lan));\n    return `${weekDayName}, ${monthDayName}`;\n}\n\n","import { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../components/layout/Card\";\nimport Table from \"../components/table/Table\";\nimport { cleanHourlyData, hourlyTitle } from \"../functionality/DataPrepare\";\nimport WeatherContext from \"../store/WheaterContext\";\nimport styles from './HourlyForecastPage.module.css';\nimport { alternativeMessages } from '../functionality/LocaleStrings';\nimport { APIKey } from '../functionality/APIKey';\n\nfunction HourlyForecastPage(props) {\n    const weatherContext = useContext(WeatherContext);\n    const [sunData, setSunData] = useState({});\n    const [receivedData, setReceivedData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const params = useParams();\n    const actualDate = new Date(params.day);\n\n    useEffect(() => {\n        fetch(`https://api.openweathermap.org/data/2.5/onecall?${params.coords}&exclude=minutely,alerts&appid=${APIKey}&units=${weatherContext.unitSystem}&lang=${weatherContext.language}`)\n            .then(response => response.json())\n            .then(data => {\n                console.log(params);\n                console.log(data);\n                const [sun, hourlyData] = cleanHourlyData(data, params.day, weatherContext.language, weatherContext.unitSystem);\n                setSunData(sun);\n                setReceivedData(hourlyData);\n                setIsLoading(false);\n            });\n    }, [weatherContext.language, params, weatherContext.unitSystem])\n\n    const content = receivedData.length === 0 && !isLoading ?\n        <div className={styles.loading}>{alternativeMessages.unavailableData[weatherContext.language]}</div>\n        :\n        <>\n            <div>\n                <h1>{hourlyTitle(actualDate, weatherContext.language)} </h1>\n                <div className={styles.subTitleRow}>\n                    <div>\n                        <FontAwesomeIcon icon={faSun} style={{ fontSize: '2rem' }} />\n                        &nbsp;\n                        {sunData.sunrise}\n                    </div>\n                    <div>\n                        <FontAwesomeIcon icon={faMoon} style={{ fontSize: '2rem' }} />\n                        &nbsp;\n                        {sunData.sunset}\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Card themeSelector={weatherContext.theme}>\n                    <Table data={receivedData} />\n                </Card>\n            </div>\n        </>;\n    const alternative = <div className={styles.loading}>{alternativeMessages.loading[weatherContext.language]}...</div>;\n    return (\n        <>\n            {isLoading ? alternative : content}\n        </>\n    );\n}\nexport default HourlyForecastPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styles from './DailyWeather.module.css';\nimport { iconNameSelection } from \"../../functionality/IconNameSelection\";\nimport classNames from 'classnames';\n\nfunction DailyWeather(props) {\n    const dailyWeatherCardClasses = classNames(styles.dailyWeatherCard, { [styles.dailyWeatherCardLightTheme]: props.themeSelector })\n    return (\n        <div className={dailyWeatherCardClasses}>\n            <h3>{props.weekDay}</h3>\n            <p>{props.dateTime}</p>\n            <FontAwesomeIcon icon={iconNameSelection(props.icon)} style={{ fontSize: '5rem' }} />\n            <h2>{props.temperature}</h2>\n            <h4>{props.description}</h4>\n        </div>\n    );\n}\n\nexport default DailyWeather;","import { useEffect } from \"react\";\n\n\n\nfunction Timer(props) {\n\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            props.setTimer()\n            console.log('Timer has changed:', props.timer);\n        }, 6000);\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, [props]);\n\n    return (null);\n}\nexport default Timer;","import { useContext, useEffect, useState } from \"react\";\nimport DailyWeather from \"../components/daily-weather/DailyWeather\";\nimport Card from \"../components/layout/Card\";\nimport styles from './HomePage.module.css';\nimport { homePageTitle } from \"../functionality/LocaleStrings\";\nimport WeatherContext from \"../store/WheaterContext\";\nimport { NavLink } from \"react-router-dom\";\nimport { clean5DaysForecastData } from \"../functionality/DataPrepare\";\nimport { APIKey } from '../functionality/APIKey';\nimport Timer from \"../components/timer/Timer\";\n\nfunction HomePage(props) {\n    const [city, setCity] = useState('');\n    const [list, setList] = useState([]);\n    // const [apiCallCondition, setApiCallCondition] = useState('lat=40.776676&lon=-73.971321');\n    //you can use the ID from the city in apiCallCondition, but only for the Forecast call to the API,\n    //for the OneCall call, latitude and longitude are needed, and the Forecast call accepts that data too\n    const weatherContext = useContext(WeatherContext);\n    const [timer, setTimer] = useState(0);\n    const language = weatherContext.language;\n    const unitSystem = weatherContext.unitSystem;\n\n    function timerHandler() {\n        setTimer(timer + 1);\n    }\n\n    useEffect(() => {\n        if (\"geolocation\" in navigator && !weatherContext.overrideGeolocation) {\n            //trying to solve geolocation problem with options\n            const options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n            navigator.geolocation.getCurrentPosition((position) => {\n                weatherContext.changeApiCallCondition(`lat=${position.coords.latitude}&lon=${position.coords.longitude}`);\n                console.log(position);\n            }, (error) => {\n                console.log(error)\n            },\n                options);\n        }\n        console.log(navigator.geolocation)\n    }, [weatherContext])\n\n    useEffect(() => {\n        //ny: 5128581\n        //quet: 3590979       \n        fetch(`https://api.openweathermap.org/data/2.5/forecast?${weatherContext.apiCallCondition}&appid=${APIKey}&units=${unitSystem}&lang=${language}`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                const [cityData, listData] = clean5DaysForecastData(data, language, unitSystem);\n                setCity(cityData);\n                setList(listData);\n            })\n\n    }, [setCity, setList, language, unitSystem, weatherContext, timer]);\n\n    return (\n        <>\n            <h1 className={styles.title}>{homePageTitle[language]}</h1>\n            <Timer setTimer={timerHandler} timer={timer} />\n            <Card themeSelector={weatherContext.theme} >\n                <h3 className={styles.subTitle}>{city}</h3>\n                {\n\n                    list.map((item, idx) => {\n                        return (\n                            <NavLink\n                                key={idx}\n                                to={`/hourlyForecast/${item.dateTimeOriginal}/${weatherContext.apiCallCondition}`}\n                                style={{ textDecoration: 'none', color: 'inherit' }}\n                            >\n                                <DailyWeather\n                                    weekDay={item.weekDay}\n                                    dateTime={item.dateTime}\n                                    icon={item.icon}\n                                    description={item.description}\n                                    temperature={item.temperature}\n                                    themeSelector={weatherContext.theme}\n                                />\n                            </NavLink>\n                        )\n                    })\n                }\n            </Card>\n        </>\n    );\n}\n\nexport default HomePage;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport HourlyForecastPage from './pages/HourlyForecastPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/hourlyForecast/:day/:coords'>\n          <HourlyForecastPage />\n        </Route>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { WeatherContextProvider } from './store/WheaterContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherContextProvider>\n      <Router basename='/weatherAppReact'>\n        <App />\n      </Router>\n    </WeatherContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}