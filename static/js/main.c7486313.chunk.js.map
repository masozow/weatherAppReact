{"version":3,"sources":["pages/HomePage.module.css","components/layout/NavBar.module.css","components/layout/Layout.module.css","components/daily-weather/DailyWeather.module.css","components/layout/Card.module.css","components/menu/MenuButton.js","components/layout/NavBar.js","components/layout/Layout.js","pages/HourlyForecastPage.js","functionality/IconNameSelection.js","components/daily-weather/DailyWeather.js","components/layout/Card.js","functionality/LocaleStrings.js","functionality/DataPrepare.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuButton","props","icon","faBars","NavBar","className","styles","logo","Layout","main","children","HourlyForecastPage","iconRelations","faSun","faMoon","faCloudSun","faCloud","faCloudRain","faCloudSunRain","faCloudMoonRain","faPooStorm","faSnowflake","faSmog","faRainbow","iconNameSelection","iconName","DailyWeather","dailyWeatherCard","weekDay","dateTime","style","fontSize","temperature","description","Card","card","weekdaysLocales","monthNameLocales","weekdays","day","locale","monthName","month","formattedDateTime","dateTimeText","lang","date","Date","getMonth","getDate","hours","getHours","minutes","getMinutes","formattedWeekDay","getDay","firstCharToUpper","dataString","charAt","toUpperCase","slice","formattedTemperature","temp","tempUnit","formattedCity","data","name","country","HomePage","useState","city","setCity","list","setList","useEffect","fetch","then","response","json","dataLength","length","filteredList","index","singleData","weather","dt_txt","push","Clean5DaysForecastData","cityData","listData","catch","error","console","log","title","subTitle","map","item","idx","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c7486313.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__2SwkK\",\"subTitle\":\"HomePage_subTitle__14AE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__2C6RD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyWeatherCard\":\"DailyWeather_dailyWeatherCard__3cc4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ZQtN\"};","import { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction MenuButton(props) {\n    return (\n        <>\n            <FontAwesomeIcon icon={faBars} />\n        </>\n    );\n}\n\nexport default MenuButton;","import MenuButton from '../menu/MenuButton';\nimport styles from './NavBar.module.css';\n\nfunction NavBar(props) {\n    return (\n        <header>\n            <div className={styles.logo}>\n                WeatherApp\n            </div>\n            <MenuButton />\n        </header>\n    );\n}\n\nexport default NavBar;\n","import NavBar from \"./NavBar\";\nimport styles from './Layout.module.css';\n\nfunction Layout(props) {\n    return (\n        <>\n            <NavBar />\n            <main className={styles.main}>\n                {props.children}\n            </main>\n        </>\n    );\n\n}\nexport default Layout;","function HourlyForecastPage(props) {\n    return (\n        <>\n            <h1>Forecast</h1>\n        </>\n    );\n}\nexport default HourlyForecastPage;","import { faSun, faCloudSun, faCloud, faCloudRain, faCloudSunRain, faCloudMoonRain, faPooStorm, faSnowflake, faSmog, faRainbow, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n///iconRelations keys according to openweather API available icons, and values\n///according to  available icons in fontawesome free package\nconst iconRelations = {\n    '01d': faSun,\n    '01n': faMoon,\n    '02d': faCloudSun,\n    '03d': faCloud,\n    '03n': faCloud,\n    '04d': faCloud,\n    '04n': faCloud,\n    '09d': faCloudRain,\n    '09n': faCloudRain,\n    '10d': faCloudSunRain,\n    '10n': faCloudMoonRain,\n    '11d': faPooStorm,\n    '11n': faPooStorm,\n    '13d': faSnowflake,\n    '13n': faSnowflake,\n    '50d': faSmog,\n    '50n': faSmog,\n    'default': faRainbow\n}\nexport function iconNameSelection(iconName = '', icons = iconRelations) {\n    if (iconRelations[iconName] && iconName !== 'default') {\n        return iconRelations[iconName];\n    }\n    else {\n        return iconRelations['default'];\n    }\n}\n\n/*\n    icons:\n    openweather=fontAwesome\n    01d=faSun\n    02d=faCloudSun\n    03d=03n=faCloud\n    04d=04n=faClouds(just faCloud, bc faClouds is pro)\n    09d=09n=faCloudRain\n    10d=faCloudSunRain\n    11d=11n=faPooStorm\n    13d=13n=faSnowFlake\n    50d=50n=faSmog (bc fog is pro)\n    01n=faMoon\n    02n=faCloudMoon\n    10n=faCloudMoonRain\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styles from './DailyWeather.module.css';\nimport { iconNameSelection } from \"../../functionality/IconNameSelection\";\n\nfunction DailyWeather(props) {\n    return (\n        <div className={styles.dailyWeatherCard}>\n            <h3>{props.weekDay}</h3>\n            <p>{props.dateTime}</p>\n            <FontAwesomeIcon icon={iconNameSelection(props.icon)} style={{ fontSize: '5rem' }} />\n            <h2>{props.temperature}</h2>\n            <h4>{props.description}</h4>\n        </div>\n    );\n}\n\nexport default DailyWeather;","import styles from './Card.module.css';\n\nfunction Card(props) {\n    return (\n        <div className={styles.card}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","const weekdaysLocales = {\n    'en': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'es': ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado']\n}\n\nconst monthNameLocales = {\n    'en': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    'es': ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre']\n}\nexport function weekdays(day = 0, locale = 'en') {\n    if (day >= 0 && day < 7) {\n        if (weekdaysLocales[locale][day]) {\n            return weekdaysLocales[locale][day];\n        }\n        else {\n            return 'Invalid languaje';\n        }\n    }\n    else {\n        return 'Inalid day number';\n    }\n};\n\n\nexport function monthName(month = 0, locale = 'en') {\n    if (month >= 0 && month < 12) {\n        if (monthNameLocales[locale][month]) {\n            return monthNameLocales[locale][month];\n        }\n        else {\n            return 'Invalid languaje';\n        }\n    }\n    else {\n        return 'Invalid month number';\n    }\n}","import { monthName, weekdays } from \"./LocaleStrings\";\n\nfunction formattedDateTime(dateTimeText = '', lang = 'en') {\n    const date = new Date(dateTimeText);\n    const month = monthName(date.getMonth(), lang);\n    const day = date.getDate();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return `${month} ${day}, ${hours === 0 ? '00' : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\n}\n\nfunction formattedWeekDay(dateTimeText = '', lang = 'en') {\n    const date = new Date(dateTimeText);\n    return weekdays(date.getDay(), lang)\n}\n\nfunction firstCharToUpper(dataString = '') {\n    return dataString.charAt(0).toUpperCase() + dataString.slice(1);\n}\n\nfunction formattedTemperature(temp = 0, tempUnit = 'C') {\n    return `${temp} °${tempUnit}`;\n}\n\nexport function Clean5DaysForecastData(data, tempUnit = 'C', lang = 'en') {\n    const city = formattedCity(data.city);\n    const dataLength = data.list.length;\n    const filteredList = [];\n    for (let index = 0; index < dataLength; index += 8) {\n        const singleData = {};\n        singleData['description'] = firstCharToUpper(data.list[index].weather[0].description);\n        singleData['temperature'] = formattedTemperature(data.list[index].main.temp, tempUnit);\n        singleData['dateTime'] = formattedDateTime(data.list[index].dt_txt, lang);\n        singleData['weekDay'] = formattedWeekDay(data.list[index].dt_txt, lang);\n        singleData['icon'] = data.list[index].weather[0].icon;\n        filteredList.push(singleData);\n    }\n    //This part costs more computing time \n    // const filteredList = data.list.filter((value, index) => {\n    //     return index % 8 === 0;\n    // });\n    return [city, filteredList];\n}\n\nfunction formattedCity(data = '') {\n    return data.name + ', ' + data.country;\n}","import { useEffect, useState } from \"react\";\nimport DailyWeather from \"../components/daily-weather/DailyWeather\";\nimport Card from \"../components/layout/Card\";\nimport styles from './HomePage.module.css';\nimport { Clean5DaysForecastData } from \"../functionality/DataPrepare\";\n\nconst languaje = 'en';\nconst units = 'metric';\n\nfunction HomePage(props) {\n    const [city, setCity] = useState('');\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?id=3590979&appid=d35ffbb008d9cbfc7bec181cf4685403&units=${units}&lang=${languaje}`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                const [cityData, listData] = Clean5DaysForecastData(data, 'C', languaje);\n                setCity(cityData);\n                setList(listData);\n            }).catch((error) => {\n                setCity('unknown');\n                setList([\n                    {\n                        dateTime: 'unknown',\n                        description: 'unknown',\n                        icon: 'none',\n                        temperature: 'unknown',\n                        weekDay: 'unknown'\n                    }\n                ]);\n            });\n    }, [setCity, setList]);\n\n    useEffect(() => {\n        console.log(list);\n        console.log(city);\n    }, [list, city])\n\n    return (\n        <>\n            <h1 className={styles.title}>Next 5 days forecast</h1>\n            <Card >\n                <h3 className={styles.subTitle}>{city}</h3>\n\n                {\n                    list.map((item, idx) => {\n                        return (\n                            <DailyWeather\n                                key={idx}\n                                weekDay={item.weekDay}\n                                dateTime={item.dateTime}\n                                icon={item.icon}\n                                description={item.description}\n                                temperature={item.temperature}\n                            />\n                        )\n                    })\n                }\n\n            </Card>\n        </>\n    );\n}\n\nexport default HomePage;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport HourlyForecastPage from './pages/HourlyForecastPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/hourlyForecast'>\n          <HourlyForecastPage />\n        </Route>\n        <Route path='/'>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/weatherAppReact'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}