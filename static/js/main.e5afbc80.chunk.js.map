{"version":3,"sources":["components/layout/NavBar.module.css","components/layout/Layout.module.css","components/daily-weather/DailyWeather.module.css","components/layout/Card.module.css","components/menu/MenuButton.js","components/layout/NavBar.js","components/layout/Layout.js","pages/HourlyForecastPage.js","components/daily-weather/DailyWeather.js","components/layout/Card.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuButton","props","icon","NavBar","className","styles","logo","Layout","main","children","HourlyForecastPage","DailyWeather","dailyWeatherCard","faCloud","style","fontSize","Card","card","HomePage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,yC,mBCArCD,EAAOC,QAAU,CAAC,KAAO,qB,4JCOVC,MANf,SAAoBC,GAChB,OACI,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,a,iBCUxBC,MAXf,SAAgBF,GACZ,OACI,mCACI,qBAAKG,UAAWC,IAAOC,KAAvB,wBAGA,cAAC,EAAD,Q,iBCKGC,MAXf,SAAgBN,GACZ,OACI,qCACI,cAAC,EAAD,IACA,sBAAMG,UAAWC,IAAOG,KAAxB,SACKP,EAAMQ,eCDRC,MAPf,SAA4BT,GACxB,OACI,mCACI,6C,yBCaGU,MAZf,SAAsBV,GAClB,OACI,sBAAKG,UAAWC,IAAOO,iBAAvB,UACI,wCACA,kDACA,cAAC,IAAD,CAAiBV,KAAMW,IAASC,MAAO,CAAEC,SAAU,UACnD,0CACA,+C,iBCDGC,MARf,SAAcf,GACV,OACI,qBAAKG,UAAWC,IAAOY,KAAvB,SACKhB,EAAMQ,YCoBJS,MAtBf,SAAkBjB,GAQd,OACI,qCACI,sDACA,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCEDkB,MAff,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCFKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAS,mBAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.e5afbc80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__2C6RD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyWeatherCard\":\"DailyWeather_dailyWeatherCard__3cc4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ZQtN\"};","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction MenuButton(props) {\n    return (\n        <FontAwesomeIcon icon={[\"fas\", \"coffee\"]} />\n    );\n}\n\nexport default MenuButton;","import MenuButton from '../menu/MenuButton';\nimport styles from './NavBar.module.css';\n\nfunction NavBar(props) {\n    return (\n        <header>\n            <div className={styles.logo}>\n                WeatherApp\n            </div>\n            <MenuButton />\n        </header>\n    );\n}\n\nexport default NavBar;\n","import NavBar from \"./NavBar\";\nimport styles from './Layout.module.css';\n\nfunction Layout(props) {\n    return (\n        <>\n            <NavBar />\n            <main className={styles.main}>\n                {props.children}\n            </main>\n        </>\n    );\n\n}\nexport default Layout;","function HourlyForecastPage(props) {\n    return (\n        <>\n            <h1>Forecast</h1>\n        </>\n    );\n}\nexport default HourlyForecastPage;","import { faCloud } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styles from './DailyWeather.module.css';\n\nfunction DailyWeather(props) {\n    return (\n        <div className={styles.dailyWeatherCard}>\n            <h3>Monday</h3>\n            <p>March 1st, 1:00pm</p>\n            <FontAwesomeIcon icon={faCloud} style={{ fontSize: '5rem' }} />\n            <h2>25 Â°C</h2>\n            <h4>Clear sky</h4>\n        </div>\n    );\n}\n\nexport default DailyWeather;","import styles from './Card.module.css';\n\nfunction Card(props) {\n    return (\n        <div className={styles.card}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","import DailyWeather from \"../components/daily-weather/DailyWeather\";\nimport Card from \"../components/layout/Card\";\n\nfunction HomePage(props) {\n    // const forecastData = [\n    //     {\n    //         day1: {\n\n    //         }\n    //     }\n    // ];\n    return (\n        <>\n            <h1>Next 5 days forecast</h1>\n            <Card >\n                <DailyWeather />\n                <DailyWeather />\n                <DailyWeather />\n                <DailyWeather />\n                <DailyWeather />\n            </Card>\n        </>\n    );\n}\n\nexport default HomePage;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport HourlyForecastPage from './pages/HourlyForecastPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/hourlyForecast'>\n          <HourlyForecastPage />\n        </Route>\n        <Route path='/'>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/weatherAppReact'>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}