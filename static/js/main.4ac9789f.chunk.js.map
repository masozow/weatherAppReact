{"version":3,"sources":["components/toggle-button/ToggleButton.module.css","components/menu/NavLinks.module.css","pages/HomePage.module.css","components/menu/MenuButton.module.css","components/layout/NavBar.module.css","components/layout/Layout.module.css","components/daily-weather/DailyWeather.module.css","components/layout/Card.module.css","store/WheaterContext.js","components/menu/MenuButton.js","functionality/LocaleStrings.js","components/toggle-button/ToggleButton.js","components/menu/NavLinks.js","components/layout/NavBar.js","components/layout/Layout.js","pages/HourlyForecastPage.js","functionality/IconNameSelection.js","components/daily-weather/DailyWeather.js","components/layout/Card.js","functionality/DateStrings.js","functionality/DataPrepare.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","WeatherContext","createContext","unitSystem","languaje","theme","changeTheme","changeLanguaje","changeUnitSystem","WeatherContextProvider","props","useState","userUnitSystem","setUserUnitSystem","userLanguaje","setUserLanguaje","userTheme","setUserTheme","context","Provider","value","children","MenuButton","useContext","className","styles","menuButtonContainer","isOpen","size","color","icon","faTimes","onClick","handleClick","faBars","homePageTitle","en","es","navBarStrings","toggleLanguage","toggleTemperature","toggleTheme","ToggleButton","toggleSide","setToggleSide","classes","classNames","toggleButtonBouncingCircle","right","left","toggleButtonContainer","toggleButtonText","text","leftOption","toggleButtonStructure","e","callbackFunction","rightOption","NavLinks","weatherContext","navBarButtonsContainerActive","navBarButtonsContainer","navBarButton","NavBar","isMenuOpen","setIsMenuOpen","logo","Layout","main","HourlyForecastPage","iconRelations","faSun","faMoon","faCloudSun","faCloud","faCloudRain","faCloudSunRain","faCloudMoonRain","faPooStorm","faSnowflake","faSmog","faRainbow","iconNameSelection","iconName","icons","DailyWeather","dailyWeatherCard","weekDay","dateTime","style","fontSize","temperature","description","Card","card","timeString","date","toLocaleTimeString","timeStyle","hourCycle","monthDay","lang","toLocaleDateString","month","day","dateString","Date","weekday","formattedDateTime","dateTimeText","monthDayString","time","firstCharToUpper","dataString","charAt","toUpperCase","slice","unitSystems","metric","imperial","formattedTemperature","temp","unitSystemsArray","formattedCity","data","name","country","HomePage","city","setCity","list","setList","language","useEffect","fetch","then","response","json","dataLength","length","filteredList","index","singleData","weather","dt","push","Clean5DaysForecastData","cityData","listData","title","subTitle","map","item","idx","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,sBAAwB,4CAA4C,sBAAwB,4CAA4C,2BAA6B,iDAAiD,KAAO,2BAA2B,MAAQ,4BAA4B,iBAAmB,yC,mBCAjUD,EAAOC,QAAU,CAAC,uBAAyB,yCAAyC,6BAA+B,+CAA+C,aAAe,iC,mBCAjLD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,SAAW,6B,mBCA7DD,EAAOC,QAAU,CAAC,oBAAsB,0C,mBCAxCD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,yC,mBCArCD,EAAOC,QAAU,CAAC,KAAO,qB,0KCCnBC,EAAiBC,wBACnB,CACIC,WAAY,WACZC,SAAU,KACVC,OAAO,EACPC,YAAa,aACbC,eAAgB,aAChBC,iBAAkB,eAGnB,SAASC,EAAuBC,GACnC,MAA4CC,mBAAS,YAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAmBA,IAAMC,EAAU,CACZb,MAAOW,EACPZ,SAAUU,EACVX,WAAYS,EACZN,YARJ,WACIW,GAAcD,IAQdR,iBAtBJ,WAEQK,EADmB,aAAnBD,EACkB,SAEA,aAmBtBL,eAhBJ,WAEQQ,EADiB,OAAjBD,EACgB,KAEA,QAexB,OACI,cAACb,EAAekB,SAAhB,CAAyBC,MAAOF,EAAhC,SACKR,EAAMW,WAKJpB,Q,iBC9BAqB,MAdf,SAAoBZ,GAChB,IACML,EADiBkB,qBAAWtB,GACLI,MAC7B,OACI,qBAAKmB,UAAWC,IAAOC,oBAAvB,SAEQhB,EAAMiB,OACF,cAAC,IAAD,CAAiBC,KAAK,KAAKC,MAAOxB,EAAQ,QAAU,QAASyB,KAAMC,IAASC,QAAStB,EAAMuB,cAC3F,cAAC,IAAD,CAAiBL,KAAK,KAAKC,MAAOxB,EAAQ,QAAU,QAASyB,KAAMI,IAAQF,QAAStB,EAAMuB,iB,yBCdjGE,EAAgB,CACzBC,GAAI,uBACJC,GAAI,gDAGKC,EACb,CACIC,eAAgB,CACZH,GAAI,WACJC,GAAI,UAERG,kBAAmB,CACfJ,GAAI,cACJC,GAAI,eAERI,YAAa,CACTL,GAAI,QACJC,GAAI,S,iBCaGK,MA1Bf,SAAsBhC,GAAQ,IAAD,EACzB,EAAoCC,oBAAS,GAA7C,mBAAOgC,EAAP,KAAmBC,EAAnB,KAEIC,EAAUC,IAAWrB,IAAOsB,4BAAR,mBAAuCtB,IAAOuB,MAAQL,GAAtD,cAAmElB,IAAOwB,MAAQN,GAAlF,IAOxB,OACI,uBAAMnB,UAAWC,IAAOyB,sBAAxB,UACI,uBAAO1B,UAAWC,IAAO0B,iBAAzB,SAA4CzC,EAAM0C,OAClD,8BACK1C,EAAM2C,WADX,OAGI,sBAAM7B,UAAWC,IAAO6B,sBAAuBtB,QAX3D,SAAsBuB,GAClBX,GAAeD,GACfjC,EAAM8C,oBASE,SACI,sBAAMhC,UAAWqB,MAJzB,OAOKnC,EAAM+C,mB,iBCARC,MAjBf,SAAkBhD,GAAQ,IAAD,EACfiD,EAAiBpC,qBAAWtB,GAC5B4C,EAAUC,KAAU,mBAAIrB,IAAOmC,6BAA+BlD,EAAMiB,QAAhD,cAAyDF,IAAOoC,wBAA0BnD,EAAMiB,QAAhG,IAC1B,OACI,sBAAKH,UAAWqB,EAAhB,UACI,qBAAKrB,UAAWC,IAAOqC,aAAvB,SACI,cAAC,EAAD,CAA2BV,KAAMd,EAAcC,eAAeoB,EAAevD,UAAWiD,WAAY,KAAMI,YAAa,KAAMD,iBAAkBG,EAAepD,gBAA3I,UAEvB,qBAAKiB,UAAWC,IAAOqC,aAAvB,SACI,cAAC,EAAD,CAA2BV,KAAMd,EAAcE,kBAAkBmB,EAAevD,UAAWiD,WAAY,QAAMI,YAAa,QAAMD,iBAAkBG,EAAenD,kBAA9I,UAEvB,qBAAKgB,UAAWC,IAAOqC,aAAvB,SACI,cAAC,EAAD,CAA2BV,KAAMd,EAAcG,YAAYkB,EAAevD,UAAWiD,WAAY,OAAQI,YAAa,QAASD,iBAAkBG,EAAerD,aAA7I,c,iBCKpByD,MAlBf,SAAgBrD,GACZ,MAAoCC,oBAAS,GAA7C,mBAAOqD,EAAP,KAAmBC,EAAnB,KAIA,OACI,mCACI,qBAAKzC,UAAWC,IAAOyC,KAAvB,wBAKA,cAAC,EAAD,CAAUvC,OAAQqC,IAClB,cAAC,EAAD,CAAYrC,OAAQqC,EAAY/B,YAXxC,WACIgC,GAAeD,U,iBCKRG,MAXf,SAAgBzD,GACZ,OACI,qCACI,cAAC,EAAD,IACA,sBAAMc,UAAWC,IAAO2C,KAAxB,SACK1D,EAAMW,eCDRgD,MAPf,SAA4B3D,GACxB,OACI,mCACI,6C,iBCAN4D,EAAgB,CAClB,MAAOC,IACP,MAAOC,IACP,MAAOC,IACP,MAAOC,IACP,MAAOA,IACP,MAAOA,IACP,MAAOA,IACP,MAAOC,IACP,MAAOA,IACP,MAAOC,IACP,MAAOC,IACP,MAAOC,IACP,MAAOA,IACP,MAAOC,IACP,MAAOA,IACP,MAAOC,IACP,MAAOA,IACP,QAAWC,KAER,SAASC,IAAyD,IAAvCC,EAAsC,uDAA3B,GAAIC,EAAuB,uDAAfd,EACrD,OAAIc,EAAMD,IAA0B,YAAbA,EACZC,EAAMD,GAGNC,EAAK,QCZLC,MAZf,SAAsB3E,GAClB,OACI,sBAAKc,UAAWC,IAAO6D,iBAAvB,UACI,6BAAK5E,EAAM6E,UACX,4BAAI7E,EAAM8E,WACV,cAAC,IAAD,CAAiB1D,KAAMoD,EAAkBxE,EAAMoB,MAAO2D,MAAO,CAAEC,SAAU,UACzE,6BAAKhF,EAAMiF,cACX,6BAAKjF,EAAMkF,kB,iBCDRC,MARf,SAAcnF,GACV,OACI,qBAAKc,UAAWC,IAAOqE,KAAvB,SACKpF,EAAMW,Y,iBCLZ,SAAS0E,EAAWC,GACvB,OAAOA,EAAKC,mBAAmB,KAAM,CAAEC,UAAW,QAASC,UAAW,QAGnE,SAASC,EAASJ,GAAoB,IAAdK,EAAa,uDAAN,KAClC,OAAOL,EAAKM,mBAAmBD,EAAM,CAAEE,MAAO,OAAQC,IAAK,YAGxD,SAASjB,EAAQkB,GAA0B,IAAdJ,EAAa,uDAAN,KACjCL,EAAO,IAAIU,KAAKD,GACtB,OAAOT,EAAKM,mBAAmBD,EAAM,CAAEM,QAAS,SCRpD,SAASC,EAAkBC,GAAoG,IAAtFR,EAAqF,uDAA9E,KACtCL,EAAO,IAAIU,KAAKG,GAChBC,EAAiBV,EAASJ,EAAMK,GAChCU,EAAOhB,EAAWC,EAAMK,GAC9B,MAAM,GAAN,OAAUS,EAAV,aAA6BC,GAGjC,SAASC,IAAmC,IAAlBC,EAAiB,uDAAJ,GACnC,OAAOA,EAAWC,OAAO,GAAGC,cAAgBF,EAAWG,MAAM,GAGjE,IAAMC,EAAc,CAChBC,OAAQ,IACRC,SAAU,KAGd,SAASC,IAAuF,IAAlEC,EAAiE,uDAA1D,EAAGtH,EAAuD,uDAA1C,SAAUuH,EAAgC,uDAAbL,EAC9E,MAAM,GAAN,OAAUI,EAAV,gBAAmBC,EAAiBvH,IAGxC,SAASwH,IAA0B,IAAZC,EAAW,uDAAJ,GAC1B,OAAOA,EAAKC,KAAO,KAAOD,EAAKE,QCsCpBC,OArDf,SAAkBrH,GACd,MAAwBC,mBAAS,IAAjC,mBAAOqH,EAAP,KAAaC,EAAb,KACA,EAAwBtH,mBAAS,IAAjC,mBAAOuH,EAAP,KAAaC,EAAb,KACMxE,EAAiBpC,qBAAWtB,GAE5BmI,EAAWzE,EAAevD,SAC1BD,EAAawD,EAAexD,WAqBlC,OApBAkI,qBAAU,WAGNC,MAAM,4GAAD,OAA6GnI,EAA7G,iBAAgIiI,IAChIG,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACX,GACH,MDGT,SAAgCA,GAInC,IAJ2F,IAAlDvB,EAAiD,uDAA1C,KAAMlG,EAAoC,uDAAvBkH,EAAW,OACxEW,EAAOL,EAAcC,EAAKI,MAC1BU,EAAad,EAAKM,KAAKS,OACvBC,EAAe,GACZC,EAAQ,EAAGA,EAAQH,EAAYG,GAAS,EAAG,CAChD,IAAMC,EAAa,GACnBA,EAAU,YAAkB9B,EAAiBY,EAAKM,KAAKW,GAAOE,QAAQ,GAAGnD,aACzEkD,EAAU,YAAkBtB,EAAqBI,EAAKM,KAAKW,GAAOzE,KAAKqD,KAAMtH,GAC7E2I,EAAU,SAAelC,EAAwC,IAAtBgB,EAAKM,KAAKW,GAAOG,GAAW3C,GACvEyC,EAAU,QAAc9B,EAAiBzB,EAA8B,IAAtBqC,EAAKM,KAAKW,GAAOG,GAAW3C,IAC7EyC,EAAU,KAAWlB,EAAKM,KAAKW,GAAOE,QAAQ,GAAGjH,KACjD8G,EAAaK,KAAKH,GAMtB,MAAO,CAACd,EAAMY,GCpB2BM,CAAuBtB,EAAMQ,EAAUjI,GAApE,mBAAOgJ,EAAP,KAAiBC,EAAjB,KACAnB,EAAQkB,GACRhB,EAAQiB,QAEjB,CAACnB,EAASE,EAASC,EAAUjI,IAS5B,qCACI,oBAAIqB,UAAWC,IAAO4H,MAAtB,SAA8BlH,EAAciG,KAC5C,eAAC,EAAD,WACI,oBAAI5G,UAAWC,IAAO6H,SAAtB,SAAiCtB,IAG7BE,EAAKqB,KAAI,SAACC,EAAMC,GACZ,OACI,cAAC,EAAD,CAEIlE,QAASiE,EAAKjE,QACdC,SAAUgE,EAAKhE,SACf1D,KAAM0H,EAAK1H,KACX8D,YAAa4D,EAAK5D,YAClBD,YAAa6D,EAAK7D,aALb8D,aCxBtBC,OAff,WACE,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,YCFKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7J,EAAD,UACE,cAAC,KAAD,CAAQ8J,SAAS,mBAAjB,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.4ac9789f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleButtonContainer\":\"ToggleButton_toggleButtonContainer__2sB6s\",\"toggleButtonStructure\":\"ToggleButton_toggleButtonStructure__18dfw\",\"toggleButtonBouncingCircle\":\"ToggleButton_toggleButtonBouncingCircle__jqbvM\",\"left\":\"ToggleButton_left__QV4O3\",\"right\":\"ToggleButton_right__31d3P\",\"toggleButtonText\":\"ToggleButton_toggleButtonText__3Ir5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarButtonsContainer\":\"NavLinks_navBarButtonsContainer__31pAt\",\"navBarButtonsContainerActive\":\"NavLinks_navBarButtonsContainerActive__2Yc4i\",\"navBarButton\":\"NavLinks_navBarButton__3GL1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__2SwkK\",\"subTitle\":\"HomePage_subTitle__14AE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButtonContainer\":\"MenuButton_menuButtonContainer__3Ix7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__2C6RD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dailyWeatherCard\":\"DailyWeather_dailyWeatherCard__3cc4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ZQtN\"};","import { createContext, useState } from \"react\";\n\nconst WeatherContext = createContext(\n    {\n        unitSystem: 'imperial',\n        languaje: 'en',\n        theme: false,\n        changeTheme: () => { },\n        changeLanguaje: () => { },\n        changeUnitSystem: () => { },\n    }\n);\nexport function WeatherContextProvider(props) {\n    const [userUnitSystem, setUserUnitSystem] = useState('imperial');\n    const [userLanguaje, setUserLanguaje] = useState('en');\n    const [userTheme, setUserTheme] = useState(false);\n\n    function handleSetUnitSystem() {\n        if (userUnitSystem === 'imperial')\n            setUserUnitSystem('metric');\n        else\n            setUserUnitSystem('imperial');\n    }\n\n    function handleSetLanguaje() {\n        if (userLanguaje === 'en')\n            setUserLanguaje('es');\n        else\n            setUserLanguaje('en');\n    }\n    function handleSetTheme() {\n        setUserTheme(!userTheme);\n    }\n\n    const context = {\n        theme: userTheme,\n        languaje: userLanguaje,\n        unitSystem: userUnitSystem,\n        changeTheme: handleSetTheme,\n        changeUnitSystem: handleSetUnitSystem,\n        changeLanguaje: handleSetLanguaje,\n    }\n\n    return (\n        <WeatherContext.Provider value={context}>\n            {props.children}\n        </WeatherContext.Provider>\n    )\n}\n\nexport default WeatherContext;","import { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport styles from './MenuButton.module.css';\n\nfunction MenuButton(props) {\n    const weatherContext = useContext(WeatherContext);\n    const theme = weatherContext.theme;\n    return (\n        <div className={styles.menuButtonContainer}>\n            {\n                props.isOpen ?\n                    <FontAwesomeIcon size='lg' color={theme ? 'black' : 'white'} icon={faTimes} onClick={props.handleClick} /> :\n                    <FontAwesomeIcon size='lg' color={theme ? 'black' : 'white'} icon={faBars} onClick={props.handleClick} />\n            }\n        </div>\n    );\n}\n\nexport default MenuButton;","export const homePageTitle = {\n    en: 'Next 5 days forecast',\n    es: 'Pronóstico para los próximos 5 días'\n};\n\nexport const navBarStrings =\n{\n    toggleLanguage: {\n        en: 'Language',\n        es: 'Idioma'\n    },\n    toggleTemperature: {\n        en: 'Temperature',\n        es: 'Temperatura'\n    },\n    toggleTheme: {\n        en: 'Theme',\n        es: 'Tema'\n    }\n}","import classNames from 'classnames';\nimport { useState } from 'react';\nimport styles from './ToggleButton.module.css';\n\nfunction ToggleButton(props) {\n    const [toggleSide, setToggleSide] = useState(false);\n    // let bouncingCircleClassName = {styles.toggleButtonBouncingCircle};\n    let classes = classNames(styles.toggleButtonBouncingCircle, { [styles.right]: toggleSide, [styles.left]: !toggleSide })\n\n    function handleToggle(e) {\n        setToggleSide(!toggleSide);\n        props.callbackFunction();\n    }\n\n    return (\n        <span className={styles.toggleButtonContainer}>\n            <label className={styles.toggleButtonText}>{props.text}</label>\n            <p>\n                {props.leftOption}\n                &nbsp;\n                <span className={styles.toggleButtonStructure} onClick={handleToggle}>\n                    <span className={classes}></span>\n                </span>\n                &nbsp;\n                {props.rightOption}\n            </p>\n        </span>\n    );\n}\n\nexport default ToggleButton;","import classNames from \"classnames\";\nimport { useContext } from \"react\";\nimport { navBarStrings } from \"../../functionality/LocaleStrings\";\nimport WeatherContext from \"../../store/WheaterContext\";\nimport ToggleButton from \"../toggle-button/ToggleButton\";\nimport styles from './NavLinks.module.css';\n\nfunction NavLinks(props) {\n    const weatherContext = useContext(WeatherContext);\n    const classes = classNames({ [styles.navBarButtonsContainerActive]: props.isOpen, [styles.navBarButtonsContainer]: !props.isOpen });\n    return (\n        <div className={classes}>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt1'} text={navBarStrings.toggleLanguage[weatherContext.languaje]} leftOption={'EN'} rightOption={'ES'} callbackFunction={weatherContext.changeLanguaje} />\n            </div>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt2'} text={navBarStrings.toggleTemperature[weatherContext.languaje]} leftOption={'°F'} rightOption={'°C'} callbackFunction={weatherContext.changeUnitSystem} />\n            </div>\n            <div className={styles.navBarButton}>\n                <ToggleButton key={'nvt3'} text={navBarStrings.toggleTheme[weatherContext.languaje]} leftOption={'Dark'} rightOption={'Light'} callbackFunction={weatherContext.changeTheme} />\n            </div>\n        </div>\n    );\n}\nexport default NavLinks;","// import { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport MenuButton from '../menu/MenuButton';\nimport NavLinks from '../menu/NavLinks';\nimport styles from './NavBar.module.css';\n\nfunction NavBar(props) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    function handleIsOpen() {\n        setIsMenuOpen(!isMenuOpen);\n    }\n    return (\n        <header>\n            <div className={styles.logo}>\n                {/* <NavLink to='/'> */}\n                WeatherApp\n                {/* </NavLink> */}\n            </div>\n            <NavLinks isOpen={isMenuOpen} />\n            <MenuButton isOpen={isMenuOpen} handleClick={handleIsOpen} />\n        </header>\n    );\n}\n\nexport default NavBar;\n","import NavBar from \"./NavBar\";\nimport styles from './Layout.module.css';\n\nfunction Layout(props) {\n    return (\n        <>\n            <NavBar />\n            <main className={styles.main}>\n                {props.children}\n            </main>\n        </>\n    );\n\n}\nexport default Layout;","function HourlyForecastPage(props) {\n    return (\n        <>\n            <h1>Forecast</h1>\n        </>\n    );\n}\nexport default HourlyForecastPage;","import { faSun, faCloudSun, faCloud, faCloudRain, faCloudSunRain, faCloudMoonRain, faPooStorm, faSnowflake, faSmog, faRainbow, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n///iconRelations keys according to openweather API available icons, and values\n///according to  available icons in fontawesome free package\nconst iconRelations = {\n    '01d': faSun,\n    '01n': faMoon,\n    '02d': faCloudSun,\n    '03d': faCloud,\n    '03n': faCloud,\n    '04d': faCloud,\n    '04n': faCloud,\n    '09d': faCloudRain,\n    '09n': faCloudRain,\n    '10d': faCloudSunRain,\n    '10n': faCloudMoonRain,\n    '11d': faPooStorm,\n    '11n': faPooStorm,\n    '13d': faSnowflake,\n    '13n': faSnowflake,\n    '50d': faSmog,\n    '50n': faSmog,\n    'default': faRainbow\n}\nexport function iconNameSelection(iconName = '', icons = iconRelations) {\n    if (icons[iconName] && iconName !== 'default') {\n        return icons[iconName];\n    }\n    else {\n        return icons['default'];\n    }\n}\n\n/*\n    icons:\n    openweather=fontAwesome\n    01d=faSun\n    02d=faCloudSun\n    03d=03n=faCloud\n    04d=04n=faClouds(just faCloud, bc faClouds is pro)\n    09d=09n=faCloudRain\n    10d=faCloudSunRain\n    11d=11n=faPooStorm\n    13d=13n=faSnowFlake\n    50d=50n=faSmog (bc fog is pro)\n    01n=faMoon\n    02n=faCloudMoon\n    10n=faCloudMoonRain\n*/","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styles from './DailyWeather.module.css';\nimport { iconNameSelection } from \"../../functionality/IconNameSelection\";\n\nfunction DailyWeather(props) {\n    return (\n        <div className={styles.dailyWeatherCard}>\n            <h3>{props.weekDay}</h3>\n            <p>{props.dateTime}</p>\n            <FontAwesomeIcon icon={iconNameSelection(props.icon)} style={{ fontSize: '5rem' }} />\n            <h2>{props.temperature}</h2>\n            <h4>{props.description}</h4>\n        </div>\n    );\n}\n\nexport default DailyWeather;","import styles from './Card.module.css';\n\nfunction Card(props) {\n    return (\n        <div className={styles.card}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Card;","export function timeString(date, lang = 'en') {\n    return date.toLocaleTimeString('en', { timeStyle: 'short', hourCycle: 'h24' });\n};\n\nexport function monthDay(date, lang = 'en') {\n    return date.toLocaleDateString(lang, { month: 'long', day: 'numeric' });\n}\n\nexport function weekDay(dateString, lang = 'en') {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(lang, { weekday: 'long' });\n}","import { monthDay, timeString, weekDay } from \"./DateStrings\";\n\nfunction formattedDateTime(dateTimeText, lang = 'en', formattingDateFunction = monthDay, formattingTimeFunction = timeString) {\n    const date = new Date(dateTimeText);\n    const monthDayString = monthDay(date, lang);\n    const time = timeString(date, lang);\n    return `${monthDayString}, ${time}`;\n}\n\nfunction firstCharToUpper(dataString = '') {\n    return dataString.charAt(0).toUpperCase() + dataString.slice(1);\n}\n\nconst unitSystems = {\n    metric: 'C',\n    imperial: 'F'\n}\n\nfunction formattedTemperature(temp = 0, unitSystem = 'metric', unitSystemsArray = unitSystems) {\n    return `${temp} °${unitSystemsArray[unitSystem]}`;\n}\n\nfunction formattedCity(data = '') {\n    return data.name + ', ' + data.country;\n}\n\nexport function Clean5DaysForecastData(data, lang = 'en', unitSystem = unitSystems['metric']) {\n    const city = formattedCity(data.city);\n    const dataLength = data.list.length;\n    const filteredList = [];\n    for (let index = 0; index < dataLength; index += 8) {\n        const singleData = {};\n        singleData['description'] = firstCharToUpper(data.list[index].weather[0].description);\n        singleData['temperature'] = formattedTemperature(data.list[index].main.temp, unitSystem);\n        singleData['dateTime'] = formattedDateTime(data.list[index].dt * 1000, lang);\n        singleData['weekDay'] = firstCharToUpper(weekDay(data.list[index].dt * 1000, lang));\n        singleData['icon'] = data.list[index].weather[0].icon;\n        filteredList.push(singleData);\n    }\n    //This part costs more computing time \n    // const filteredList = data.list.filter((value, index) => {\n    //     return index % 8 === 0;\n    // });\n    return [city, filteredList];\n}\n\n","import { useContext, useEffect, useState } from \"react\";\nimport DailyWeather from \"../components/daily-weather/DailyWeather\";\nimport Card from \"../components/layout/Card\";\nimport styles from './HomePage.module.css';\nimport { Clean5DaysForecastData } from \"../functionality/DataPrepare\";\nimport { homePageTitle } from \"../functionality/LocaleStrings\";\nimport WeatherContext from \"../store/WheaterContext\";\n\nfunction HomePage(props) {\n    const [city, setCity] = useState('');\n    const [list, setList] = useState([]);\n    const weatherContext = useContext(WeatherContext);\n\n    const language = weatherContext.languaje;\n    const unitSystem = weatherContext.unitSystem;\n    useEffect(() => {\n        //ny: 5128581\n        //quet: 3590979\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?id=3590979&appid=d35ffbb008d9cbfc7bec181cf4685403&units=${unitSystem}&lang=${language}`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                const [cityData, listData] = Clean5DaysForecastData(data, language, unitSystem);\n                setCity(cityData);\n                setList(listData);\n            });\n    }, [setCity, setList, language, unitSystem]);\n\n    // useEffect(() => {\n    //     console.log(list);\n    //     console.log(city);\n    //     console.log(languaje);\n    // }, [list, city, languaje])\n\n    return (\n        <>\n            <h1 className={styles.title}>{homePageTitle[language]}</h1>\n            <Card >\n                <h3 className={styles.subTitle}>{city}</h3>\n\n                {\n                    list.map((item, idx) => {\n                        return (\n                            <DailyWeather\n                                key={idx}\n                                weekDay={item.weekDay}\n                                dateTime={item.dateTime}\n                                icon={item.icon}\n                                description={item.description}\n                                temperature={item.temperature}\n                            />\n                        )\n                    })\n                }\n\n            </Card>\n        </>\n    );\n}\n\nexport default HomePage;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport HourlyForecastPage from './pages/HourlyForecastPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/hourlyForecast'>\n          <HourlyForecastPage />\n        </Route>\n        <Route path='/'>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { WeatherContextProvider } from './store/WheaterContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherContextProvider>\n      <Router basename='/weatherAppReact'>\n        <App />\n      </Router>\n    </WeatherContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}